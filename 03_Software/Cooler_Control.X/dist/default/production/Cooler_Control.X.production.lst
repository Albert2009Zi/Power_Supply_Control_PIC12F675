

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Sep 04 19:31:47 2025

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x5E,2
    24     0000                     
    25                           ; Generated 17/08/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC12F675 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0019                     	;# 
    73     001E                     	;# 
    74     001F                     	;# 
    75     0081                     	;# 
    76     0085                     	;# 
    77     008C                     	;# 
    78     008E                     	;# 
    79     0090                     	;# 
    80     0095                     	;# 
    81     0096                     	;# 
    82     0096                     	;# 
    83     0099                     	;# 
    84     009A                     	;# 
    85     009A                     	;# 
    86     009B                     	;# 
    87     009C                     	;# 
    88     009D                     	;# 
    89     009E                     	;# 
    90     009F                     	;# 
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000E                     	;# 
   101     000E                     	;# 
   102     000F                     	;# 
   103     0010                     	;# 
   104     0019                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     008C                     	;# 
   110     008E                     	;# 
   111     0090                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0096                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0019                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     008C                     	;# 
   142     008E                     	;# 
   143     0090                     	;# 
   144     0095                     	;# 
   145     0096                     	;# 
   146     0096                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009A                     	;# 
   150     009B                     	;# 
   151     009C                     	;# 
   152     009D                     	;# 
   153     009E                     	;# 
   154     009F                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0019                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     008C                     	;# 
   174     008E                     	;# 
   175     0090                     	;# 
   176     0095                     	;# 
   177     0096                     	;# 
   178     0096                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009A                     	;# 
   182     009B                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     0000                     	;# 
   188     0001                     	;# 
   189     0002                     	;# 
   190     0003                     	;# 
   191     0004                     	;# 
   192     0005                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000E                     	;# 
   197     000E                     	;# 
   198     000F                     	;# 
   199     0010                     	;# 
   200     0019                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     008C                     	;# 
   206     008E                     	;# 
   207     0090                     	;# 
   208     0095                     	;# 
   209     0096                     	;# 
   210     0096                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     001E                     _ADRESH	set	30
   220     001F                     _ADCON0	set	31
   221     0005                     _GPIO	set	5
   222     0019                     _CMCON	set	25
   223     0001                     _TMR0	set	1
   224     00F9                     _GO	set	249
   225     0066                     _ADIF	set	102
   226     00FA                     _CHS0	set	250
   227     00FB                     _CHS1	set	251
   228     00FF                     _ADFM	set	255
   229     00F8                     _ADON	set	248
   230     005F                     _GIE	set	95
   231     005E                     _PEIE	set	94
   232     00FE                     _VCFG	set	254
   233     002C                     _GP4	set	44
   234     002D                     _GP5	set	45
   235     005D                     _TMR0IE	set	93
   236     005A                     _TMR0IF	set	90
   237     002A                     _GP2	set	42
   238     009E                     _ADRESL	set	158
   239     009F                     _ANSEL	set	159
   240     0085                     _TRISIO	set	133
   241     0099                     _VRCON	set	153
   242     0081                     _OPTION_REG	set	129
   243     0429                     _TRISIO1	set	1065
   244     0428                     _TRISIO0	set	1064
   245     042C                     _TRISIO4	set	1068
   246     042D                     _TRISIO5	set	1069
   247     042A                     _TRISIO2	set	1066
   248                           
   249                           	psect	cinit
   250     000C                     start_initialization:	
   251                           ; #config settings
   252                           
   253     000C                     __initialization:
   254                           
   255                           ; Clear objects allocated to BANK0
   256     000C  1383               	bcf	3,7	;select IRP bank0
   257     000D  3020               	movlw	low __pbssBANK0
   258     000E  0084               	movwf	4
   259     000F  303A               	movlw	low (__pbssBANK0+26)
   260     0010  22F9               	fcall	clear_ram0
   261     0011                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264     0011                     __end_of__initialization:
   265     0011  0183               	clrf	3
   266     0012  2B09               	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269     0020                     __pbssBANK0:
   270     0020                     _beepsQueue:
   271     0020                     	ds	15
   272     002F                     BeepsStateMachine@stateMachineDuration:
   273     002F                     	ds	2
   274     0031                     _cnt0:
   275     0031                     	ds	2
   276     0033                     ADCProcessing@adcState:
   277     0033                     	ds	1
   278     0034                     playAlert@soundState:
   279     0034                     	ds	1
   280     0035                     BeepsStateMachine@stateMachineAllowTimeout:
   281     0035                     	ds	1
   282     0036                     BeepsStateMachine@state:
   283     0036                     	ds	1
   284     0037                     _queueTail:
   285     0037                     	ds	1
   286     0038                     _queueHead:
   287     0038                     	ds	1
   288     0039                     _prmFlags:
   289     0039                     	ds	1
   290                           
   291                           	psect	clrtext
   292     02F9                     clear_ram0:	
   293                           ;	Called with FSR containing the base address, and
   294                           ;	W with the last address+1
   295                           
   296     02F9  0064               	clrwdt	;clear the watchdog before getting into this loop
   297     02FA                     clrloop0:
   298     02FA  0180               	clrf	0	;clear RAM location pointed to by FSR
   299     02FB  0A84               	incf	4,f	;increment pointer
   300     02FC  0604               	xorwf	4,w	;XOR with final address
   301     02FD  1903               	btfsc	3,2	;have we reached the end yet?
   302     02FE  3400               	retlw	0	;all done for this memory range, return
   303     02FF  0604               	xorwf	4,w	;XOR again to restore value
   304     0300  2AFA               	goto	clrloop0	;do the next byte
   305                           
   306                           	psect	cstackCOMMON
   307     0000                     __pcstackCOMMON:
   308     0000                     ??_InitTimer0:
   309     0000                     ??_Init_uC:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0000                     ??_main:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0000                     ??_EnqueueBeeps:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0000                     ??___bmul:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0000                     ??___awmod:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           	psect	cstackBANK0
   326     003A                     __pcstackBANK0:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     003A                     ?_InitTimer0:
   330     003A                     ?_Init_uC:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     003A                     ?_ADCProcessing:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     003A                     ?_playAlert:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     003A                     ?_BeepsStateMachine:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     003A                     ?_MuxVoltage:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     003A                     ?_MuxTemp:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     003A                     ?_ISR:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     003A                     ??_ISR:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     003A                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357                           
   358                           ; 2 bytes @ 0x0
   359     003A                     	ds	2
   360     003C                     ??_MuxVoltage:
   361     003C                     ??_MuxTemp:	
   362                           ; 1 bytes @ 0x2
   363                           
   364     003C                     ?___bmul:	
   365                           ; 1 bytes @ 0x2
   366                           
   367     003C                     ?___awmod:	
   368                           ; 1 bytes @ 0x2
   369                           
   370     003C                     ___bmul@multiplicand:	
   371                           ; 2 bytes @ 0x2
   372                           
   373     003C                     ___awmod@divisor:	
   374                           ; 1 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378     003C                     	ds	1
   379     003D                     ??_ADCProcessing:
   380     003D                     ___bmul@product:	
   381                           ; 1 bytes @ 0x3
   382                           
   383                           
   384                           ; 1 bytes @ 0x3
   385     003D                     	ds	1
   386     003E                     ___bmul@multiplier:
   387     003E                     ___awmod@dividend:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 2 bytes @ 0x4
   392     003E                     	ds	1
   393     003F                     ADCProcessing@adcValue:
   394                           
   395                           ; 2 bytes @ 0x5
   396     003F                     	ds	1
   397     0040                     ___awmod@counter:
   398                           
   399                           ; 1 bytes @ 0x6
   400     0040                     	ds	1
   401     0041                     ___awmod@sign:
   402                           
   403                           ; 1 bytes @ 0x7
   404     0041                     	ds	1
   405     0042                     ??_BeepsStateMachine:
   406     0042                     ?_EnqueueBeeps:	
   407                           ; 1 bytes @ 0x8
   408                           
   409     0042                     EnqueueBeeps@duration:	
   410                           ; 1 bytes @ 0x8
   411                           
   412                           
   413                           ; 2 bytes @ 0x8
   414     0042                     	ds	2
   415     0044                     EnqueueBeeps@allowTimeout:
   416                           
   417                           ; 1 bytes @ 0xA
   418     0044                     	ds	1
   419     0045                     ??_playAlert:
   420                           
   421                           ; 1 bytes @ 0xB
   422     0045                     	ds	4
   423     0049                     playAlert@totalBeeps:
   424                           
   425                           ; 1 bytes @ 0xF
   426     0049                     	ds	1
   427     004A                     playAlert@i:
   428                           
   429                           ; 1 bytes @ 0x10
   430     004A                     	ds	1
   431     004B                     playAlert@i_85:
   432                           
   433                           ; 1 bytes @ 0x11
   434     004B                     	ds	1
   435     004C                     playAlert@howMuchTimesPlayLong:
   436                           
   437                           ; 1 bytes @ 0x12
   438     004C                     	ds	1
   439     004D                     playAlert@howMuchTimesPlayShort:
   440                           
   441                           ; 1 bytes @ 0x13
   442     004D                     	ds	1
   443                           
   444                           	psect	maintext
   445     0309                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 66 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  2   14[None  ] int 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0
   465 ;;      Params:         0       0
   466 ;;      Locals:         0       0
   467 ;;      Temps:          0       0
   468 ;;      Totals:         0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels required when called: 4
   471 ;; This function calls:
   472 ;;		_ADCProcessing
   473 ;;		_BeepsStateMachine
   474 ;;		_InitTimer0
   475 ;;		_Init_uC
   476 ;;		_playAlert
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482     0309                     _main:	
   483                           ;psect for function _main
   484                           
   485     0309                     l1530:	
   486                           ;incstack = 0
   487                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   488                           
   489     0309  2301               	fcall	_InitTimer0
   490     030A  2290               	fcall	_Init_uC
   491     030B                     l1532:
   492     030B  20C5               	fcall	_ADCProcessing
   493     030C                     l1534:
   494     030C  2013               	fcall	_playAlert
   495     030D                     l1536:
   496     030D  2174               	fcall	_BeepsStateMachine
   497     030E  2B0B               	goto	l1532
   498     030F  280B               	ljmp	start
   499     0310                     __end_of_main:
   500                           
   501                           	psect	text1
   502     0013                     __ptext1:	
   503 ;; *************** function _playAlert *****************
   504 ;; Defined at:
   505 ;;		line 94 in file "sounds.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  i               1   17[BANK0 ] unsigned char 
   510 ;;  i               1   16[BANK0 ] unsigned char 
   511 ;;  howMuchTimes    1   19[BANK0 ] unsigned char 
   512 ;;  howMuchTimes    1   18[BANK0 ] unsigned char 
   513 ;;  totalBeeps      1   15[BANK0 ] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0
   523 ;;      Params:         0       0
   524 ;;      Locals:         0       5
   525 ;;      Temps:          0       4
   526 ;;      Totals:         0       9
   527 ;;Total ram usage:        9 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 3
   530 ;; This function calls:
   531 ;;		_EnqueueBeeps
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     0013                     _playAlert:	
   538                           ;psect for function _playAlert
   539                           
   540     0013                     l1412:	
   541                           ;incstack = 0
   542                           ; Regs used in _playAlert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   543                           
   544                           
   545                           ;sounds.c: 96:    uint8_t howMuchTimesPlayShort = 0;
   546     0013  1283               	bcf	3,5	;RP0=0, select bank0
   547     0014  01CD               	clrf	playAlert@howMuchTimesPlayShort
   548                           
   549                           ;sounds.c: 97:    uint8_t howMuchTimesPlayLong = 0;
   550     0015  01CC               	clrf	playAlert@howMuchTimesPlayLong
   551                           
   552                           ;sounds.c: 99:    static uint8_t soundState = 0;;sounds.c: 101:    switch (soundState){
   553     0016  2851               	goto	l1448
   554     0017                     l63:	
   555                           ;sounds.c: 102:      case 0:
   556                           
   557                           
   558                           ;sounds.c: 103:       if (prmFlags.errorUnderVoltage){
   559     0017  1CB9               	btfss	_prmFlags,1	;volatile
   560     0018  281A               	goto	u631
   561     0019  281B               	goto	u630
   562     001A                     u631:
   563     001A  281F               	goto	l1418
   564     001B                     u630:
   565     001B                     l1414:
   566                           
   567                           ;sounds.c: 104:         howMuchTimesPlayShort = 2;
   568     001B  3002               	movlw	2
   569     001C  00CD               	movwf	playAlert@howMuchTimesPlayShort
   570     001D                     l1416:
   571                           
   572                           ;sounds.c: 105:         howMuchTimesPlayLong = 1;
   573     001D  01CC               	clrf	playAlert@howMuchTimesPlayLong
   574     001E  0ACC               	incf	playAlert@howMuchTimesPlayLong,f
   575     001F                     l1418:
   576                           
   577                           ;sounds.c: 107:       if (!prmFlags.alarmState) soundState = 1;
   578     001F  1A39               	btfsc	_prmFlags,4	;volatile
   579     0020  2822               	goto	u641
   580     0021  2823               	goto	u640
   581     0022                     u641:
   582     0022  2867               	goto	l1450
   583     0023                     u640:
   584     0023                     l1420:
   585     0023  01B4               	clrf	playAlert@soundState
   586     0024  0AB4               	incf	playAlert@soundState,f
   587     0025  2867               	goto	l1450
   588     0026                     l67:	
   589                           ;sounds.c: 110:      case 1:
   590                           
   591                           
   592                           ;sounds.c: 111:      if (prmFlags.errorOverVoltage) {
   593     0026  1D39               	btfss	_prmFlags,2	;volatile
   594     0027  2829               	goto	u651
   595     0028  282A               	goto	u650
   596     0029                     u651:
   597     0029  282E               	goto	l1424
   598     002A                     u650:
   599     002A                     l1422:
   600                           
   601                           ;sounds.c: 112:          howMuchTimesPlayShort = 2;
   602     002A  3002               	movlw	2
   603     002B  00CD               	movwf	playAlert@howMuchTimesPlayShort
   604                           
   605                           ;sounds.c: 113:          howMuchTimesPlayLong = 2;
   606     002C  3002               	movlw	2
   607     002D  00CC               	movwf	playAlert@howMuchTimesPlayLong
   608     002E                     l1424:
   609                           
   610                           ;sounds.c: 115:       if (!prmFlags.alarmState) soundState = 2;
   611     002E  1A39               	btfsc	_prmFlags,4	;volatile
   612     002F  2831               	goto	u661
   613     0030  2832               	goto	u660
   614     0031                     u661:
   615     0031  2867               	goto	l1450
   616     0032                     u660:
   617     0032                     l1426:
   618     0032  3002               	movlw	2
   619     0033  00B4               	movwf	playAlert@soundState
   620     0034  2867               	goto	l1450
   621     0035                     l70:	
   622                           ;sounds.c: 118:      case 2:
   623                           
   624                           
   625                           ;sounds.c: 119:      if (prmFlags.errorHighTemperature){
   626     0035  1DB9               	btfss	_prmFlags,3	;volatile
   627     0036  2838               	goto	u671
   628     0037  2839               	goto	u670
   629     0038                     u671:
   630     0038  283C               	goto	l1432
   631     0039                     u670:
   632     0039                     l1428:
   633                           
   634                           ;sounds.c: 120:        howMuchTimesPlayShort = 3;
   635     0039  3003               	movlw	3
   636     003A  00CD               	movwf	playAlert@howMuchTimesPlayShort
   637     003B                     l1430:
   638                           
   639                           ;sounds.c: 121:        howMuchTimesPlayLong = 0;
   640     003B  01CC               	clrf	playAlert@howMuchTimesPlayLong
   641     003C                     l1432:
   642                           
   643                           ;sounds.c: 123:       if (!prmFlags.alarmState) soundState = 3;
   644     003C  1A39               	btfsc	_prmFlags,4	;volatile
   645     003D  283F               	goto	u681
   646     003E  2840               	goto	u680
   647     003F                     u681:
   648     003F  2867               	goto	l1450
   649     0040                     u680:
   650     0040                     l1434:
   651     0040  3003               	movlw	3
   652     0041  00B4               	movwf	playAlert@soundState
   653     0042  2867               	goto	l1450
   654     0043                     l73:	
   655                           ;sounds.c: 126:      case 3:
   656                           
   657                           
   658                           ;sounds.c: 127:       if (prmFlags.playLong){
   659     0043  1EB9               	btfss	_prmFlags,5	;volatile
   660     0044  2846               	goto	u691
   661     0045  2847               	goto	u690
   662     0046                     u691:
   663     0046  284A               	goto	l1440
   664     0047                     u690:
   665     0047                     l1436:
   666                           
   667                           ;sounds.c: 128:        howMuchTimesPlayShort = 0;
   668     0047  01CD               	clrf	playAlert@howMuchTimesPlayShort
   669     0048                     l1438:
   670                           
   671                           ;sounds.c: 129:        howMuchTimesPlayLong = 1;
   672     0048  01CC               	clrf	playAlert@howMuchTimesPlayLong
   673     0049  0ACC               	incf	playAlert@howMuchTimesPlayLong,f
   674     004A                     l1440:
   675                           
   676                           ;sounds.c: 131:       if (!prmFlags.alarmState) {
   677     004A  1A39               	btfsc	_prmFlags,4	;volatile
   678     004B  284D               	goto	u701
   679     004C  284E               	goto	u700
   680     004D                     u701:
   681     004D  2867               	goto	l1450
   682     004E                     u700:
   683     004E                     l1442:
   684                           
   685                           ;sounds.c: 132:        soundState = 0;
   686     004E  01B4               	clrf	playAlert@soundState
   687     004F                     l1444:
   688                           
   689                           ;sounds.c: 133:        prmFlags.playLong = 0;
   690     004F  12B9               	bcf	_prmFlags,5	;volatile
   691     0050  2867               	goto	l1450
   692     0051                     l1448:
   693     0051  0834               	movf	playAlert@soundState,w
   694     0052  00C5               	movwf	??_playAlert
   695     0053  01C6               	clrf	??_playAlert+1
   696                           
   697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   698                           ; Switch size 1, requested type "simple"
   699                           ; Number of cases is 1, Range of values is 0 to 0
   700                           ; switch strategies available:
   701                           ; Name         Instructions Cycles
   702                           ; simple_byte            4     3 (average)
   703                           ; direct_byte            7     6 (fixed)
   704                           ; jumptable            260     6 (fixed)
   705                           ;	Chosen strategy is simple_byte
   706     0054  0846               	movf	??_playAlert+1,w
   707     0055  3A00               	xorlw	0	; case 0
   708     0056  1903               	skipnz
   709     0057  2859               	goto	l1606
   710     0058  2867               	goto	l1450
   711     0059                     l1606:
   712                           
   713                           ; Switch size 1, requested type "simple"
   714                           ; Number of cases is 4, Range of values is 0 to 3
   715                           ; switch strategies available:
   716                           ; Name         Instructions Cycles
   717                           ; direct_byte           10     6 (fixed)
   718                           ; simple_byte           13     7 (average)
   719                           ; jumptable            260     6 (fixed)
   720                           ;	Chosen strategy is simple_byte
   721     0059  0845               	movf	??_playAlert,w
   722     005A  3A00               	xorlw	0	; case 0
   723     005B  1903               	skipnz
   724     005C  2817               	goto	l63
   725     005D  3A01               	xorlw	1	; case 1
   726     005E  1903               	skipnz
   727     005F  2826               	goto	l67
   728     0060  3A03               	xorlw	3	; case 2
   729     0061  1903               	skipnz
   730     0062  2835               	goto	l70
   731     0063  3A01               	xorlw	1	; case 3
   732     0064  1903               	skipnz
   733     0065  2843               	goto	l73
   734     0066  2867               	goto	l1450
   735     0067                     l1450:
   736                           
   737                           ;sounds.c: 141:     totalBeeps = howMuchTimesPlayShort + howMuchTimesPlayLong;
   738     0067  084C               	movf	playAlert@howMuchTimesPlayLong,w
   739     0068  074D               	addwf	playAlert@howMuchTimesPlayShort,w
   740     0069  00C9               	movwf	playAlert@totalBeeps
   741     006A                     l1452:
   742                           
   743                           ;sounds.c: 144:     for (uint8_t i = 0; i < howMuchTimesPlayShort; i++) {
   744     006A  01CA               	clrf	playAlert@i
   745     006B  288D               	goto	l1462
   746     006C                     l1454:
   747                           
   748                           ;sounds.c: 145:         if (i == (totalBeeps - 1)) {
   749     006C  0849               	movf	playAlert@totalBeeps,w
   750     006D  3EFF               	addlw	255
   751     006E  00C5               	movwf	??_playAlert
   752     006F  30FF               	movlw	255
   753     0070  1803               	skipnc
   754     0071  3000               	movlw	0
   755     0072  00C6               	movwf	??_playAlert+1
   756     0073  084A               	movf	playAlert@i,w
   757     0074  0645               	xorwf	??_playAlert,w
   758     0075  0446               	iorwf	??_playAlert+1,w
   759     0076  1D03               	skipz
   760     0077  2879               	goto	u711
   761     0078  287A               	goto	u710
   762     0079                     u711:
   763     0079  2882               	goto	l1458
   764     007A                     u710:
   765     007A                     l1456:
   766                           
   767                           ;sounds.c: 146:             EnqueueBeeps(120, 1);
   768     007A  3078               	movlw	120
   769     007B  00C2               	movwf	EnqueueBeeps@duration
   770     007C  3000               	movlw	0
   771     007D  00C3               	movwf	EnqueueBeeps@duration+1
   772     007E  01C4               	clrf	EnqueueBeeps@allowTimeout
   773     007F  0AC4               	incf	EnqueueBeeps@allowTimeout,f
   774     0080  2254               	fcall	_EnqueueBeeps
   775                           
   776                           ;sounds.c: 147:         } else {
   777     0081  2888               	goto	l1460
   778     0082                     l1458:
   779                           
   780                           ;sounds.c: 148:             EnqueueBeeps(120, 0);
   781     0082  3078               	movlw	120
   782     0083  00C2               	movwf	EnqueueBeeps@duration
   783     0084  3000               	movlw	0
   784     0085  00C3               	movwf	EnqueueBeeps@duration+1
   785     0086  01C4               	clrf	EnqueueBeeps@allowTimeout
   786     0087  2254               	fcall	_EnqueueBeeps
   787     0088                     l1460:
   788                           
   789                           ;sounds.c: 150:     }
   790     0088  3001               	movlw	1
   791     0089  00DF               	movwf	btemp+1
   792     008A  085F               	movf	btemp+1,w
   793     008B  1283               	bcf	3,5	;RP0=0, select bank0
   794     008C  07CA               	addwf	playAlert@i,f
   795     008D                     l1462:
   796     008D  084D               	movf	playAlert@howMuchTimesPlayShort,w
   797     008E  024A               	subwf	playAlert@i,w
   798     008F  1C03               	skipc
   799     0090  2892               	goto	u721
   800     0091  2893               	goto	u720
   801     0092                     u721:
   802     0092  286C               	goto	l1454
   803     0093                     u720:
   804     0093                     l1464:
   805                           
   806                           ;sounds.c: 153:     for (uint8_t i = 0; i < howMuchTimesPlayLong; i++) {
   807     0093  01CB               	clrf	playAlert@i_85
   808     0094  28BE               	goto	l1474
   809     0095                     l1466:
   810                           
   811                           ;sounds.c: 154:         if ((howMuchTimesPlayShort + i) == totalBeeps - 1) {
   812     0095  0849               	movf	playAlert@totalBeeps,w
   813     0096  3EFF               	addlw	255
   814     0097  00C5               	movwf	??_playAlert
   815     0098  30FF               	movlw	255
   816     0099  1803               	skipnc
   817     009A  3000               	movlw	0
   818     009B  00C6               	movwf	??_playAlert+1
   819     009C  084D               	movf	playAlert@howMuchTimesPlayShort,w
   820     009D  074B               	addwf	playAlert@i_85,w
   821     009E  00C7               	movwf	??_playAlert+2
   822     009F  01C8               	clrf	??_playAlert+3
   823     00A0  0DC8               	rlf	??_playAlert+3,f
   824     00A1  0846               	movf	??_playAlert+1,w
   825     00A2  0648               	xorwf	??_playAlert+3,w
   826     00A3  1D03               	skipz
   827     00A4  28A7               	goto	u735
   828     00A5  0845               	movf	??_playAlert,w
   829     00A6  0647               	xorwf	??_playAlert+2,w
   830     00A7                     u735:
   831     00A7  1D03               	skipz
   832     00A8  28AA               	goto	u731
   833     00A9  28AB               	goto	u730
   834     00AA                     u731:
   835     00AA  28B3               	goto	l1470
   836     00AB                     u730:
   837     00AB                     l1468:
   838                           
   839                           ;sounds.c: 155:             EnqueueBeeps(300, 1);
   840     00AB  302C               	movlw	44
   841     00AC  00C2               	movwf	EnqueueBeeps@duration
   842     00AD  3001               	movlw	1
   843     00AE  00C3               	movwf	EnqueueBeeps@duration+1
   844     00AF  01C4               	clrf	EnqueueBeeps@allowTimeout
   845     00B0  0AC4               	incf	EnqueueBeeps@allowTimeout,f
   846     00B1  2254               	fcall	_EnqueueBeeps
   847                           
   848                           ;sounds.c: 156:         } else {
   849     00B2  28B9               	goto	l1472
   850     00B3                     l1470:
   851                           
   852                           ;sounds.c: 157:             EnqueueBeeps(300, 0);
   853     00B3  302C               	movlw	44
   854     00B4  00C2               	movwf	EnqueueBeeps@duration
   855     00B5  3001               	movlw	1
   856     00B6  00C3               	movwf	EnqueueBeeps@duration+1
   857     00B7  01C4               	clrf	EnqueueBeeps@allowTimeout
   858     00B8  2254               	fcall	_EnqueueBeeps
   859     00B9                     l1472:
   860                           
   861                           ;sounds.c: 159:     }
   862     00B9  3001               	movlw	1
   863     00BA  00DF               	movwf	btemp+1
   864     00BB  085F               	movf	btemp+1,w
   865     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   866     00BD  07CB               	addwf	playAlert@i_85,f
   867     00BE                     l1474:
   868     00BE  084C               	movf	playAlert@howMuchTimesPlayLong,w
   869     00BF  024B               	subwf	playAlert@i_85,w
   870     00C0  1C03               	skipc
   871     00C1  28C3               	goto	u741
   872     00C2  28C4               	goto	u740
   873     00C3                     u741:
   874     00C3  2895               	goto	l1466
   875     00C4                     u740:
   876     00C4                     l87:
   877     00C4  0008               	return
   878     00C5                     __end_of_playAlert:
   879                           
   880                           	psect	text2
   881     0254                     __ptext2:	
   882 ;; *************** function _EnqueueBeeps *****************
   883 ;; Defined at:
   884 ;;		line 25 in file "sounds.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  duration        2    8[BANK0 ] unsigned int 
   887 ;;  allowTimeout    1   10[BANK0 ] unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0
   899 ;;      Params:         0       3
   900 ;;      Locals:         0       0
   901 ;;      Temps:          0       0
   902 ;;      Totals:         0       3
   903 ;;Total ram usage:        3 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 2
   906 ;; This function calls:
   907 ;;		___awmod
   908 ;;		___bmul
   909 ;; This function is called by:
   910 ;;		_playAlert
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914     0254                     _EnqueueBeeps:	
   915                           ;psect for function _EnqueueBeeps
   916                           
   917     0254                     l1264:	
   918                           ;incstack = 0
   919                           ; Regs used in _EnqueueBeeps: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   920                           
   921                           
   922                           ;sounds.c: 27:     if ((queueTail + 1) % 5 != queueHead) {
   923     0254  3005               	movlw	5
   924     0255  1283               	bcf	3,5	;RP0=0, select bank0
   925     0256  00BC               	movwf	___awmod@divisor
   926     0257  3000               	movlw	0
   927     0258  00BD               	movwf	___awmod@divisor+1
   928     0259  0837               	movf	_queueTail,w
   929     025A  3E01               	addlw	1
   930     025B  00BE               	movwf	___awmod@dividend
   931     025C  3000               	movlw	0
   932     025D  1803               	skipnc
   933     025E  3001               	movlw	1
   934     025F  00BF               	movwf	___awmod@dividend+1
   935     0260  21FA               	fcall	___awmod
   936     0261  1283               	bcf	3,5	;RP0=0, select bank0
   937     0262  0838               	movf	_queueHead,w
   938     0263  063C               	xorwf	?___awmod,w
   939     0264  043D               	iorwf	?___awmod+1,w
   940     0265  1903               	skipnz
   941     0266  2A68               	goto	u461
   942     0267  2A69               	goto	u460
   943     0268                     u461:
   944     0268  2A8F               	goto	l34
   945     0269                     u460:
   946     0269                     l1266:
   947                           
   948                           ;sounds.c: 29:         beepsQueue[queueTail].duration = duration;
   949     0269  3003               	movlw	3
   950     026A  00BC               	movwf	___bmul@multiplicand
   951     026B  0837               	movf	_queueTail,w
   952     026C  22B0               	fcall	___bmul
   953     026D  3E20               	addlw	(low (_beepsQueue| 0))& (0+255)
   954     026E  0084               	movwf	4
   955     026F  1283               	bcf	3,5	;RP0=0, select bank0
   956     0270  0842               	movf	EnqueueBeeps@duration,w
   957     0271  1383               	bcf	3,7	;select IRP bank0
   958     0272  0080               	movwf	0
   959     0273  0A84               	incf	4,f
   960     0274  0843               	movf	EnqueueBeeps@duration+1,w
   961     0275  0080               	movwf	0
   962                           
   963                           ;sounds.c: 30:         beepsQueue[queueTail].allowTimeout = allowTimeout;
   964     0276  3003               	movlw	3
   965     0277  00BC               	movwf	___bmul@multiplicand
   966     0278  0837               	movf	_queueTail,w
   967     0279  22B0               	fcall	___bmul
   968     027A  3E22               	addlw	(low ((_beepsQueue| 0+2)))& (0+255)
   969     027B  0084               	movwf	4
   970     027C  1283               	bcf	3,5	;RP0=0, select bank0
   971     027D  0844               	movf	EnqueueBeeps@allowTimeout,w
   972     027E  1383               	bcf	3,7	;select IRP bank0
   973     027F  0080               	movwf	0
   974     0280                     l1268:
   975                           
   976                           ;sounds.c: 31:         queueTail = (queueTail + 1) % 5;
   977     0280  3005               	movlw	5
   978     0281  00BC               	movwf	___awmod@divisor
   979     0282  3000               	movlw	0
   980     0283  00BD               	movwf	___awmod@divisor+1
   981     0284  0837               	movf	_queueTail,w
   982     0285  3E01               	addlw	1
   983     0286  00BE               	movwf	___awmod@dividend
   984     0287  3000               	movlw	0
   985     0288  1803               	skipnc
   986     0289  3001               	movlw	1
   987     028A  00BF               	movwf	___awmod@dividend+1
   988     028B  21FA               	fcall	___awmod
   989     028C  1283               	bcf	3,5	;RP0=0, select bank0
   990     028D  083C               	movf	?___awmod,w
   991     028E  00B7               	movwf	_queueTail
   992     028F                     l34:
   993     028F  0008               	return
   994     0290                     __end_of_EnqueueBeeps:
   995                           
   996                           	psect	text3
   997     0290                     __ptext3:	
   998 ;; *************** function _Init_uC *****************
   999 ;; Defined at:
  1000 ;;		line 16 in file "initPeriphery.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0
  1014 ;;      Params:         0       0
  1015 ;;      Locals:         0       0
  1016 ;;      Temps:          0       0
  1017 ;;      Totals:         0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 2
  1021 ;; This function calls:
  1022 ;;		_MuxVoltage
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028     0290                     _Init_uC:	
  1029                           ;psect for function _Init_uC
  1030                           
  1031     0290                     l1310:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
  1034                           
  1035                           
  1036                           ;initPeriphery.c: 17:     CMCON = 0x07;
  1037     0290  3007               	movlw	7
  1038     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1039     0292  0099               	movwf	25	;volatile
  1040     0293                     l1312:
  1041                           
  1042                           ;initPeriphery.c: 18:     VRCON = 0x00;
  1043     0293  1683               	bsf	3,5	;RP0=1, select bank1
  1044     0294  0199               	clrf	25	;volatile
  1045     0295                     l1314:
  1046                           
  1047                           ;initPeriphery.c: 21:     TRISIO = 0;
  1048     0295  0185               	clrf	5	;volatile
  1049     0296                     l1316:
  1050                           
  1051                           ;initPeriphery.c: 22:     GPIO = 0;
  1052     0296  1283               	bcf	3,5	;RP0=0, select bank0
  1053     0297  0185               	clrf	5	;volatile
  1054     0298                     l1318:
  1055                           
  1056                           ;initPeriphery.c: 25:     TRISIO2 = 0;
  1057     0298  1683               	bsf	3,5	;RP0=1, select bank1
  1058     0299  1105               	bcf	5,2	;volatile
  1059     029A                     l1320:
  1060                           
  1061                           ;initPeriphery.c: 26:     GP2 = 0;
  1062     029A  1283               	bcf	3,5	;RP0=0, select bank0
  1063     029B  1105               	bcf	5,2	;volatile
  1064     029C                     l1322:
  1065                           
  1066                           ;initPeriphery.c: 29:     TRISIO5 = 0;
  1067     029C  1683               	bsf	3,5	;RP0=1, select bank1
  1068     029D  1285               	bcf	5,5	;volatile
  1069     029E                     l1324:
  1070                           
  1071                           ;initPeriphery.c: 30:     GP5 = 1;
  1072     029E  1283               	bcf	3,5	;RP0=0, select bank0
  1073     029F  1685               	bsf	5,5	;volatile
  1074     02A0                     l1326:
  1075                           
  1076                           ;initPeriphery.c: 33:     TRISIO4 = 0;
  1077     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  1078     02A1  1205               	bcf	5,4	;volatile
  1079     02A2                     l1328:
  1080                           
  1081                           ;initPeriphery.c: 34:     GP4 = 1;
  1082     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1083     02A3  1605               	bsf	5,4	;volatile
  1084     02A4                     l1330:
  1085                           
  1086                           ;initPeriphery.c: 37:     VCFG = 0;
  1087     02A4  131F               	bcf	31,6	;volatile
  1088     02A5                     l1332:
  1089                           
  1090                           ;initPeriphery.c: 38:     TRISIO0 = 1;
  1091     02A5  1683               	bsf	3,5	;RP0=1, select bank1
  1092     02A6  1405               	bsf	5,0	;volatile
  1093     02A7                     l1334:
  1094                           
  1095                           ;initPeriphery.c: 39:     TRISIO1 = 1;
  1096     02A7  1485               	bsf	5,1	;volatile
  1097     02A8                     l1336:
  1098                           
  1099                           ;initPeriphery.c: 41:     ANSEL = 0b00110011;
  1100     02A8  3033               	movlw	51
  1101     02A9  009F               	movwf	31	;volatile
  1102     02AA                     l1338:
  1103                           
  1104                           ;initPeriphery.c: 43:     PEIE = 1;
  1105     02AA  170B               	bsf	11,6	;volatile
  1106     02AB                     l1340:
  1107                           
  1108                           ;initPeriphery.c: 44:     GIE = 1;
  1109     02AB  178B               	bsf	11,7	;volatile
  1110     02AC                     l1342:
  1111                           
  1112                           ;initPeriphery.c: 47:     prmFlags.playLong = 1;
  1113     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1114     02AD  16B9               	bsf	_prmFlags,5	;volatile
  1115     02AE                     l1344:
  1116                           
  1117                           ;initPeriphery.c: 49:     MuxVoltage();
  1118     02AE  22DB               	fcall	_MuxVoltage
  1119     02AF                     l137:
  1120     02AF  0008               	return
  1121     02B0                     __end_of_Init_uC:
  1122                           
  1123                           	psect	text4
  1124     0301                     __ptext4:	
  1125 ;; *************** function _InitTimer0 *****************
  1126 ;; Defined at:
  1127 ;;		line 9 in file "initPeriphery.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0
  1141 ;;      Params:         0       0
  1142 ;;      Locals:         0       0
  1143 ;;      Temps:          0       0
  1144 ;;      Totals:         0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     0301                     _InitTimer0:	
  1156                           ;psect for function _InitTimer0
  1157                           
  1158     0301                     l1302:	
  1159                           ;incstack = 0
  1160                           ; Regs used in _InitTimer0: [wreg+status,2]
  1161                           
  1162                           
  1163                           ;initPeriphery.c: 10:     OPTION_REG = 0b11000001;
  1164     0301  30C1               	movlw	193
  1165     0302  1683               	bsf	3,5	;RP0=1, select bank1
  1166     0303  0081               	movwf	1	;volatile
  1167     0304                     l1304:
  1168                           
  1169                           ;initPeriphery.c: 11:     TMR0 = 0;
  1170     0304  1283               	bcf	3,5	;RP0=0, select bank0
  1171     0305  0181               	clrf	1	;volatile
  1172     0306                     l1306:
  1173                           
  1174                           ;initPeriphery.c: 12:     TMR0IF = 0;
  1175     0306  110B               	bcf	11,2	;volatile
  1176     0307                     l1308:
  1177                           
  1178                           ;initPeriphery.c: 13:     TMR0IE = 1;
  1179     0307  168B               	bsf	11,5	;volatile
  1180     0308                     l134:
  1181     0308  0008               	return
  1182     0309                     __end_of_InitTimer0:
  1183                           
  1184                           	psect	text5
  1185     0174                     __ptext5:	
  1186 ;; *************** function _BeepsStateMachine *****************
  1187 ;; Defined at:
  1188 ;;		line 38 in file "sounds.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0
  1202 ;;      Params:         0       0
  1203 ;;      Locals:         0       0
  1204 ;;      Temps:          0       2
  1205 ;;      Totals:         0       2
  1206 ;;Total ram usage:        2 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 2
  1209 ;; This function calls:
  1210 ;;		___awmod
  1211 ;;		___bmul
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217     0174                     _BeepsStateMachine:	
  1218                           ;psect for function _BeepsStateMachine
  1219                           
  1220     0174                     l1480:	
  1221                           ;incstack = 0
  1222                           ; Regs used in _BeepsStateMachine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1223                           
  1224                           
  1225                           ;sounds.c: 40:     static uint8_t state = 0;;sounds.c: 41:     static uint16_t stateMach
      +                          ineDuration = 0;;sounds.c: 42:     static uint8_t stateMachineAllowTimeout = 0;;sounds.c
      +                          : 44:     switch(state){
  1226     0174  29E2               	goto	l1524
  1227     0175                     l1482:
  1228                           
  1229                           ;sounds.c: 46:         if (queueHead != queueTail) {
  1230     0175  0838               	movf	_queueHead,w
  1231     0176  0637               	xorwf	_queueTail,w
  1232     0177  1903               	skipnz
  1233     0178  297A               	goto	u751
  1234     0179  297B               	goto	u750
  1235     017A                     u751:
  1236     017A  29F9               	goto	l57
  1237     017B                     u750:
  1238     017B                     l1484:
  1239                           
  1240                           ;sounds.c: 47:                 stateMachineDuration = beepsQueue[queueHead].duration;
  1241     017B  3003               	movlw	3
  1242     017C  00BC               	movwf	___bmul@multiplicand
  1243     017D  0838               	movf	_queueHead,w
  1244     017E  22B0               	fcall	___bmul
  1245     017F  3E20               	addlw	(low (_beepsQueue| 0))& (0+255)
  1246     0180  0084               	movwf	4
  1247     0181  1383               	bcf	3,7	;select IRP bank0
  1248     0182  0800               	movf	0,w
  1249     0183  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0184  00AF               	movwf	BeepsStateMachine@stateMachineDuration
  1251     0185  0A84               	incf	4,f
  1252     0186  0800               	movf	0,w
  1253     0187  00B0               	movwf	BeepsStateMachine@stateMachineDuration+1
  1254                           
  1255                           ;sounds.c: 48:                 stateMachineAllowTimeout = beepsQueue[queueHead].allowTim
      +                          eout;
  1256     0188  3003               	movlw	3
  1257     0189  00BC               	movwf	___bmul@multiplicand
  1258     018A  0838               	movf	_queueHead,w
  1259     018B  22B0               	fcall	___bmul
  1260     018C  3E22               	addlw	(low ((_beepsQueue| 0+2)))& (0+255)
  1261     018D  0084               	movwf	4
  1262     018E  1383               	bcf	3,7	;select IRP bank0
  1263     018F  0800               	movf	0,w
  1264     0190  1283               	bcf	3,5	;RP0=0, select bank0
  1265     0191  00B5               	movwf	BeepsStateMachine@stateMachineAllowTimeout
  1266     0192                     l1486:
  1267                           
  1268                           ;sounds.c: 49:                 queueHead = (queueHead + 1) % 5;
  1269     0192  3005               	movlw	5
  1270     0193  00BC               	movwf	___awmod@divisor
  1271     0194  3000               	movlw	0
  1272     0195  00BD               	movwf	___awmod@divisor+1
  1273     0196  0838               	movf	_queueHead,w
  1274     0197  3E01               	addlw	1
  1275     0198  00BE               	movwf	___awmod@dividend
  1276     0199  3000               	movlw	0
  1277     019A  1803               	skipnc
  1278     019B  3001               	movlw	1
  1279     019C  00BF               	movwf	___awmod@dividend+1
  1280     019D  21FA               	fcall	___awmod
  1281     019E  1283               	bcf	3,5	;RP0=0, select bank0
  1282     019F  083C               	movf	?___awmod,w
  1283     01A0  00B8               	movwf	_queueHead
  1284     01A1                     l1488:
  1285                           
  1286                           ;sounds.c: 50:                 GP2 = 1;
  1287     01A1  1505               	bsf	5,2	;volatile
  1288     01A2                     l1490:
  1289                           
  1290                           ;sounds.c: 51:                 cnt0 = 0;
  1291     01A2  01B1               	clrf	_cnt0	;volatile
  1292     01A3  01B2               	clrf	_cnt0+1	;volatile
  1293     01A4                     l1492:
  1294                           
  1295                           ;sounds.c: 52:                 state = 1;
  1296     01A4  01B6               	clrf	BeepsStateMachine@state
  1297     01A5  0AB6               	incf	BeepsStateMachine@state,f
  1298     01A6                     l1494:
  1299                           
  1300                           ;sounds.c: 53:           prmFlags.alarmState = 1;
  1301     01A6  1639               	bsf	_prmFlags,4	;volatile
  1302     01A7  29F9               	goto	l57
  1303     01A8                     l1496:
  1304                           
  1305                           ;sounds.c: 58:    if (cnt0 >= stateMachineDuration){
  1306     01A8  0830               	movf	BeepsStateMachine@stateMachineDuration+1,w
  1307     01A9  0232               	subwf	_cnt0+1,w	;volatile
  1308     01AA  1D03               	skipz
  1309     01AB  29AE               	goto	u765
  1310     01AC  082F               	movf	BeepsStateMachine@stateMachineDuration,w
  1311     01AD  0231               	subwf	_cnt0,w	;volatile
  1312     01AE                     u765:
  1313     01AE  1C03               	skipc
  1314     01AF  29B1               	goto	u761
  1315     01B0  29B2               	goto	u760
  1316     01B1                     u761:
  1317     01B1  29F9               	goto	l57
  1318     01B2                     u760:
  1319     01B2                     l1498:
  1320                           
  1321                           ;sounds.c: 59:              cnt0 = 0;
  1322     01B2  01B1               	clrf	_cnt0	;volatile
  1323     01B3  01B2               	clrf	_cnt0+1	;volatile
  1324     01B4                     l1500:
  1325                           
  1326                           ;sounds.c: 60:              state = 2;
  1327     01B4  3002               	movlw	2
  1328     01B5  00B6               	movwf	BeepsStateMachine@state
  1329     01B6                     l1502:
  1330                           
  1331                           ;sounds.c: 61:              GP2 = 0;
  1332     01B6  1105               	bcf	5,2	;volatile
  1333     01B7  29F9               	goto	l57
  1334     01B8                     l1504:
  1335                           
  1336                           ;sounds.c: 66:           if (cnt0 >= 80){
  1337     01B8  3000               	movlw	0
  1338     01B9  0232               	subwf	_cnt0+1,w	;volatile
  1339     01BA  3050               	movlw	80
  1340     01BB  1903               	skipnz
  1341     01BC  0231               	subwf	_cnt0,w	;volatile
  1342     01BD  1C03               	skipc
  1343     01BE  29C0               	goto	u771
  1344     01BF  29C1               	goto	u770
  1345     01C0                     u771:
  1346     01C0  29F9               	goto	l57
  1347     01C1                     u770:
  1348     01C1                     l1506:
  1349                           
  1350                           ;sounds.c: 67:              cnt0 = 0;
  1351     01C1  01B1               	clrf	_cnt0	;volatile
  1352     01C2  01B2               	clrf	_cnt0+1	;volatile
  1353     01C3                     l1508:
  1354                           
  1355                           ;sounds.c: 68:              if (stateMachineAllowTimeout == 0){
  1356     01C3  0835               	movf	BeepsStateMachine@stateMachineAllowTimeout,w
  1357     01C4  1D03               	btfss	3,2
  1358     01C5  29C7               	goto	u781
  1359     01C6  29C8               	goto	u780
  1360     01C7                     u781:
  1361     01C7  29CA               	goto	l1512
  1362     01C8                     u780:
  1363     01C8                     l1510:
  1364                           
  1365                           ;sounds.c: 69:                  state = 0;
  1366     01C8  01B6               	clrf	BeepsStateMachine@state
  1367                           
  1368                           ;sounds.c: 70:          }
  1369     01C9  29F9               	goto	l57
  1370     01CA                     l1512:
  1371     01CA  0335               	decf	BeepsStateMachine@stateMachineAllowTimeout,w
  1372     01CB  1D03               	btfss	3,2
  1373     01CC  29CE               	goto	u791
  1374     01CD  29CF               	goto	u790
  1375     01CE                     u791:
  1376     01CE  29F9               	goto	l57
  1377     01CF                     u790:
  1378     01CF                     l1514:
  1379                           
  1380                           ;sounds.c: 72:          state = 3;
  1381     01CF  3003               	movlw	3
  1382     01D0  00B6               	movwf	BeepsStateMachine@state
  1383     01D1  29F9               	goto	l57
  1384     01D2                     l1516:
  1385                           
  1386                           ;sounds.c: 78:          if (cnt0 >= 1300){
  1387     01D2  3005               	movlw	5
  1388     01D3  0232               	subwf	_cnt0+1,w	;volatile
  1389     01D4  3014               	movlw	20
  1390     01D5  1903               	skipnz
  1391     01D6  0231               	subwf	_cnt0,w	;volatile
  1392     01D7  1C03               	skipc
  1393     01D8  29DA               	goto	u801
  1394     01D9  29DB               	goto	u800
  1395     01DA                     u801:
  1396     01DA  29F9               	goto	l57
  1397     01DB                     u800:
  1398     01DB                     l1518:
  1399                           
  1400                           ;sounds.c: 79:            cnt0 = 0;
  1401     01DB  01B1               	clrf	_cnt0	;volatile
  1402     01DC  01B2               	clrf	_cnt0+1	;volatile
  1403                           
  1404                           ;sounds.c: 80:            queueHead = 0;
  1405     01DD  01B8               	clrf	_queueHead
  1406                           
  1407                           ;sounds.c: 81:            queueTail = 0;
  1408     01DE  01B7               	clrf	_queueTail
  1409                           
  1410                           ;sounds.c: 82:         state = 0;
  1411     01DF  01B6               	clrf	BeepsStateMachine@state
  1412     01E0                     l1520:
  1413                           
  1414                           ;sounds.c: 83:         prmFlags.alarmState = 0;
  1415     01E0  1239               	bcf	_prmFlags,4	;volatile
  1416     01E1  29F9               	goto	l57
  1417     01E2                     l1524:
  1418     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1419     01E3  0836               	movf	BeepsStateMachine@state,w
  1420     01E4  00C2               	movwf	??_BeepsStateMachine
  1421     01E5  01C3               	clrf	??_BeepsStateMachine+1
  1422                           
  1423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 1, Range of values is 0 to 0
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte            4     3 (average)
  1429                           ; direct_byte            7     6 (fixed)
  1430                           ; jumptable            260     6 (fixed)
  1431                           ;	Chosen strategy is simple_byte
  1432     01E6  0843               	movf	??_BeepsStateMachine+1,w
  1433     01E7  3A00               	xorlw	0	; case 0
  1434     01E8  1903               	skipnz
  1435     01E9  29EB               	goto	l1608
  1436     01EA  29F9               	goto	l57
  1437     01EB                     l1608:
  1438                           
  1439                           ; Switch size 1, requested type "simple"
  1440                           ; Number of cases is 4, Range of values is 0 to 3
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; direct_byte           10     6 (fixed)
  1444                           ; simple_byte           13     7 (average)
  1445                           ; jumptable            260     6 (fixed)
  1446                           ;	Chosen strategy is simple_byte
  1447     01EB  0842               	movf	??_BeepsStateMachine,w
  1448     01EC  3A00               	xorlw	0	; case 0
  1449     01ED  1903               	skipnz
  1450     01EE  2975               	goto	l1482
  1451     01EF  3A01               	xorlw	1	; case 1
  1452     01F0  1903               	skipnz
  1453     01F1  29A8               	goto	l1496
  1454     01F2  3A03               	xorlw	3	; case 2
  1455     01F3  1903               	skipnz
  1456     01F4  29B8               	goto	l1504
  1457     01F5  3A01               	xorlw	1	; case 3
  1458     01F6  1903               	skipnz
  1459     01F7  29D2               	goto	l1516
  1460     01F8  29F9               	goto	l57
  1461     01F9                     l57:
  1462     01F9  0008               	return
  1463     01FA                     __end_of_BeepsStateMachine:
  1464                           
  1465                           	psect	text6
  1466     02B0                     __ptext6:	
  1467 ;; *************** function ___bmul *****************
  1468 ;; Defined at:
  1469 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  multiplier      1    wreg     unsigned char 
  1472 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  multiplier      1    4[BANK0 ] unsigned char 
  1475 ;;  product         1    3[BANK0 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      unsigned char 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, btemp+1
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0
  1485 ;;      Params:         0       1
  1486 ;;      Locals:         0       2
  1487 ;;      Temps:          0       0
  1488 ;;      Totals:         0       3
  1489 ;;Total ram usage:        3 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_EnqueueBeeps
  1496 ;;		_BeepsStateMachine
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500     02B0                     ___bmul:	
  1501                           ;psect for function ___bmul
  1502                           
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1506                           ;___bmul@multiplier stored from wreg
  1507     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1508     02B1  00BE               	movwf	___bmul@multiplier
  1509     02B2                     l1210:
  1510     02B2  01BD               	clrf	___bmul@product
  1511     02B3                     l1212:
  1512     02B3  1C3E               	btfss	___bmul@multiplier,0
  1513     02B4  2AB6               	goto	u351
  1514     02B5  2AB7               	goto	u350
  1515     02B6                     u351:
  1516     02B6  2ABB               	goto	l1216
  1517     02B7                     u350:
  1518     02B7                     l1214:
  1519     02B7  083C               	movf	___bmul@multiplicand,w
  1520     02B8  00DF               	movwf	btemp+1
  1521     02B9  085F               	movf	btemp+1,w
  1522     02BA  07BD               	addwf	___bmul@product,f
  1523     02BB                     l1216:
  1524     02BB  1003               	clrc
  1525     02BC  0DBC               	rlf	___bmul@multiplicand,f
  1526     02BD                     l1218:
  1527     02BD  1003               	clrc
  1528     02BE  0CBE               	rrf	___bmul@multiplier,f
  1529     02BF                     l1220:
  1530     02BF  083E               	movf	___bmul@multiplier,w
  1531     02C0  1D03               	btfss	3,2
  1532     02C1  2AC3               	goto	u361
  1533     02C2  2AC4               	goto	u360
  1534     02C3                     u361:
  1535     02C3  2AB3               	goto	l1212
  1536     02C4                     u360:
  1537     02C4                     l1222:
  1538     02C4  083D               	movf	___bmul@product,w
  1539     02C5                     l322:
  1540     02C5  0008               	return
  1541     02C6                     __end_of___bmul:
  1542                           
  1543                           	psect	text7
  1544     01FA                     __ptext7:	
  1545 ;; *************** function ___awmod *****************
  1546 ;; Defined at:
  1547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  divisor         2    2[BANK0 ] int 
  1550 ;;  dividend        2    4[BANK0 ] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  sign            1    7[BANK0 ] unsigned char 
  1553 ;;  counter         1    6[BANK0 ] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2    2[BANK0 ] int 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, btemp+1
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0
  1563 ;;      Params:         0       4
  1564 ;;      Locals:         0       2
  1565 ;;      Temps:          0       0
  1566 ;;      Totals:         0       6
  1567 ;;Total ram usage:        6 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_EnqueueBeeps
  1574 ;;		_BeepsStateMachine
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578     01FA                     ___awmod:	
  1579                           ;psect for function ___awmod
  1580                           
  1581     01FA                     l1226:	
  1582                           ;incstack = 0
  1583                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1584                           
  1585     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1586     01FB  01C1               	clrf	___awmod@sign
  1587     01FC                     l1228:
  1588     01FC  1FBF               	btfss	___awmod@dividend+1,7
  1589     01FD  29FF               	goto	u371
  1590     01FE  2A00               	goto	u370
  1591     01FF                     u371:
  1592     01FF  2A07               	goto	l1234
  1593     0200                     u370:
  1594     0200                     l1230:
  1595     0200  09BE               	comf	___awmod@dividend,f
  1596     0201  09BF               	comf	___awmod@dividend+1,f
  1597     0202  0ABE               	incf	___awmod@dividend,f
  1598     0203  1903               	skipnz
  1599     0204  0ABF               	incf	___awmod@dividend+1,f
  1600     0205                     l1232:
  1601     0205  01C1               	clrf	___awmod@sign
  1602     0206  0AC1               	incf	___awmod@sign,f
  1603     0207                     l1234:
  1604     0207  1FBD               	btfss	___awmod@divisor+1,7
  1605     0208  2A0A               	goto	u381
  1606     0209  2A0B               	goto	u380
  1607     020A                     u381:
  1608     020A  2A10               	goto	l1238
  1609     020B                     u380:
  1610     020B                     l1236:
  1611     020B  09BC               	comf	___awmod@divisor,f
  1612     020C  09BD               	comf	___awmod@divisor+1,f
  1613     020D  0ABC               	incf	___awmod@divisor,f
  1614     020E  1903               	skipnz
  1615     020F  0ABD               	incf	___awmod@divisor+1,f
  1616     0210                     l1238:
  1617     0210  083C               	movf	___awmod@divisor,w
  1618     0211  043D               	iorwf	___awmod@divisor+1,w
  1619     0212  1903               	btfsc	3,2
  1620     0213  2A15               	goto	u391
  1621     0214  2A16               	goto	u390
  1622     0215                     u391:
  1623     0215  2A45               	goto	l1256
  1624     0216                     u390:
  1625     0216                     l1240:
  1626     0216  01C0               	clrf	___awmod@counter
  1627     0217  0AC0               	incf	___awmod@counter,f
  1628     0218  2A24               	goto	l1246
  1629     0219                     l1242:
  1630     0219  3001               	movlw	1
  1631     021A                     u405:
  1632     021A  1003               	clrc
  1633     021B  0DBC               	rlf	___awmod@divisor,f
  1634     021C  0DBD               	rlf	___awmod@divisor+1,f
  1635     021D  3EFF               	addlw	-1
  1636     021E  1D03               	skipz
  1637     021F  2A1A               	goto	u405
  1638     0220                     l1244:
  1639     0220  3001               	movlw	1
  1640     0221  00DF               	movwf	btemp+1
  1641     0222  085F               	movf	btemp+1,w
  1642     0223  07C0               	addwf	___awmod@counter,f
  1643     0224                     l1246:
  1644     0224  1FBD               	btfss	___awmod@divisor+1,7
  1645     0225  2A27               	goto	u411
  1646     0226  2A28               	goto	u410
  1647     0227                     u411:
  1648     0227  2A19               	goto	l1242
  1649     0228                     u410:
  1650     0228                     l1248:
  1651     0228  083D               	movf	___awmod@divisor+1,w
  1652     0229  023F               	subwf	___awmod@dividend+1,w
  1653     022A  1D03               	skipz
  1654     022B  2A2E               	goto	u425
  1655     022C  083C               	movf	___awmod@divisor,w
  1656     022D  023E               	subwf	___awmod@dividend,w
  1657     022E                     u425:
  1658     022E  1C03               	skipc
  1659     022F  2A31               	goto	u421
  1660     0230  2A32               	goto	u420
  1661     0231                     u421:
  1662     0231  2A38               	goto	l1252
  1663     0232                     u420:
  1664     0232                     l1250:
  1665     0232  083C               	movf	___awmod@divisor,w
  1666     0233  02BE               	subwf	___awmod@dividend,f
  1667     0234  083D               	movf	___awmod@divisor+1,w
  1668     0235  1C03               	skipc
  1669     0236  03BF               	decf	___awmod@dividend+1,f
  1670     0237  02BF               	subwf	___awmod@dividend+1,f
  1671     0238                     l1252:
  1672     0238  3001               	movlw	1
  1673     0239                     u435:
  1674     0239  1003               	clrc
  1675     023A  0CBD               	rrf	___awmod@divisor+1,f
  1676     023B  0CBC               	rrf	___awmod@divisor,f
  1677     023C  3EFF               	addlw	-1
  1678     023D  1D03               	skipz
  1679     023E  2A39               	goto	u435
  1680     023F                     l1254:
  1681     023F  3001               	movlw	1
  1682     0240  02C0               	subwf	___awmod@counter,f
  1683     0241  1D03               	btfss	3,2
  1684     0242  2A44               	goto	u441
  1685     0243  2A45               	goto	u440
  1686     0244                     u441:
  1687     0244  2A28               	goto	l1248
  1688     0245                     u440:
  1689     0245                     l1256:
  1690     0245  0841               	movf	___awmod@sign,w
  1691     0246  1903               	btfsc	3,2
  1692     0247  2A49               	goto	u451
  1693     0248  2A4A               	goto	u450
  1694     0249                     u451:
  1695     0249  2A4F               	goto	l1260
  1696     024A                     u450:
  1697     024A                     l1258:
  1698     024A  09BE               	comf	___awmod@dividend,f
  1699     024B  09BF               	comf	___awmod@dividend+1,f
  1700     024C  0ABE               	incf	___awmod@dividend,f
  1701     024D  1903               	skipnz
  1702     024E  0ABF               	incf	___awmod@dividend+1,f
  1703     024F                     l1260:
  1704     024F  083F               	movf	___awmod@dividend+1,w
  1705     0250  00BD               	movwf	?___awmod+1
  1706     0251  083E               	movf	___awmod@dividend,w
  1707     0252  00BC               	movwf	?___awmod
  1708     0253                     l462:
  1709     0253  0008               	return
  1710     0254                     __end_of___awmod:
  1711                           
  1712                           	psect	text8
  1713     00C5                     __ptext8:	
  1714 ;; *************** function _ADCProcessing *****************
  1715 ;; Defined at:
  1716 ;;		line 48 in file "interrupt.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  adcValue        2    5[BANK0 ] unsigned int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0
  1730 ;;      Params:         0       0
  1731 ;;      Locals:         0       2
  1732 ;;      Temps:          0       2
  1733 ;;      Totals:         0       4
  1734 ;;Total ram usage:        4 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 2
  1737 ;; This function calls:
  1738 ;;		_MuxTemp
  1739 ;;		_MuxVoltage
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745     00C5                     _ADCProcessing:	
  1746                           ;psect for function _ADCProcessing
  1747                           
  1748     00C5                     l1346:	
  1749                           ;incstack = 0
  1750                           ; Regs used in _ADCProcessing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1751                           
  1752     00C5                     l1348:
  1753                           
  1754                           ;interrupt.c: 51:     static uint8_t adcState = 0;;interrupt.c: 53:     if (ADIF == 1){
  1755     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1756     00C6  1F0C               	btfss	12,6	;volatile
  1757     00C7  28C9               	goto	u471
  1758     00C8  28CA               	goto	u470
  1759     00C9                     u471:
  1760     00C9  2973               	goto	l210
  1761     00CA                     u470:
  1762     00CA                     l1350:
  1763                           
  1764                           ;interrupt.c: 54:      adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1765     00CA  081E               	movf	30,w	;volatile
  1766     00CB  00C0               	movwf	ADCProcessing@adcValue+1
  1767     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1768     00CD  081E               	movf	30,w	;volatile
  1769     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1770     00CF  00BF               	movwf	ADCProcessing@adcValue
  1771                           
  1772                           ;interrupt.c: 56:      switch (adcState){
  1773     00D0  2963               	goto	l1406
  1774     00D1                     l1352:
  1775                           
  1776                           ;interrupt.c: 59:    if ((adcValue > 96) && (adcValue < 148)){
  1777     00D1  3000               	movlw	0
  1778     00D2  0240               	subwf	ADCProcessing@adcValue+1,w
  1779     00D3  3061               	movlw	97
  1780     00D4  1903               	skipnz
  1781     00D5  023F               	subwf	ADCProcessing@adcValue,w
  1782     00D6  1C03               	skipc
  1783     00D7  28D9               	goto	u481
  1784     00D8  28DA               	goto	u480
  1785     00D9                     u481:
  1786     00D9  28ED               	goto	l1360
  1787     00DA                     u480:
  1788     00DA                     l1354:
  1789     00DA  3000               	movlw	0
  1790     00DB  0240               	subwf	ADCProcessing@adcValue+1,w
  1791     00DC  3094               	movlw	148
  1792     00DD  1903               	skipnz
  1793     00DE  023F               	subwf	ADCProcessing@adcValue,w
  1794     00DF  1803               	skipnc
  1795     00E0  28E2               	goto	u491
  1796     00E1  28E3               	goto	u490
  1797     00E2                     u491:
  1798     00E2  28ED               	goto	l1360
  1799     00E3                     u490:
  1800     00E3                     l1356:
  1801                           
  1802                           ;interrupt.c: 60:       if(prmFlags.errorHighTemperature == 0) GP5 = 0;
  1803     00E3  19B9               	btfsc	_prmFlags,3	;volatile
  1804     00E4  28E6               	goto	u501
  1805     00E5  28E7               	goto	u500
  1806     00E6                     u501:
  1807     00E6  28E9               	goto	l190
  1808     00E7                     u500:
  1809     00E7                     l1358:
  1810     00E7  1285               	bcf	5,5	;volatile
  1811     00E8  28EA               	goto	l191
  1812     00E9                     l190:	
  1813                           ;interrupt.c: 61:        else GP5 = 1;
  1814                           
  1815     00E9  1685               	bsf	5,5	;volatile
  1816     00EA                     l191:
  1817                           
  1818                           ;interrupt.c: 62:        prmFlags.errorUnderVoltage = 0;
  1819     00EA  10B9               	bcf	_prmFlags,1	;volatile
  1820                           
  1821                           ;interrupt.c: 63:           prmFlags.errorOverVoltage = 0;
  1822     00EB  1139               	bcf	_prmFlags,2	;volatile
  1823                           
  1824                           ;interrupt.c: 64:            }
  1825     00EC  2904               	goto	l1368
  1826     00ED                     l1360:
  1827     00ED  3000               	movlw	0
  1828     00EE  0240               	subwf	ADCProcessing@adcValue+1,w
  1829     00EF  3061               	movlw	97
  1830     00F0  1903               	skipnz
  1831     00F1  023F               	subwf	ADCProcessing@adcValue,w
  1832     00F2  1803               	skipnc
  1833     00F3  28F5               	goto	u511
  1834     00F4  28F6               	goto	u510
  1835     00F5                     u511:
  1836     00F5  28F9               	goto	l1364
  1837     00F6                     u510:
  1838     00F6                     l1362:
  1839                           
  1840                           ;interrupt.c: 66:           GP5 = 1;
  1841     00F6  1685               	bsf	5,5	;volatile
  1842                           
  1843                           ;interrupt.c: 67:        prmFlags.errorUnderVoltage = 1;
  1844     00F7  14B9               	bsf	_prmFlags,1	;volatile
  1845                           
  1846                           ;interrupt.c: 68:   }
  1847     00F8  2904               	goto	l1368
  1848     00F9                     l1364:
  1849     00F9  3000               	movlw	0
  1850     00FA  0240               	subwf	ADCProcessing@adcValue+1,w
  1851     00FB  3094               	movlw	148
  1852     00FC  1903               	skipnz
  1853     00FD  023F               	subwf	ADCProcessing@adcValue,w
  1854     00FE  1C03               	skipc
  1855     00FF  2901               	goto	u521
  1856     0100  2902               	goto	u520
  1857     0101                     u521:
  1858     0101  2904               	goto	l1368
  1859     0102                     u520:
  1860     0102                     l1366:
  1861                           
  1862                           ;interrupt.c: 72:        GP5 = 1;
  1863     0102  1685               	bsf	5,5	;volatile
  1864                           
  1865                           ;interrupt.c: 73:     prmFlags.errorOverVoltage = 1;
  1866     0103  1539               	bsf	_prmFlags,2	;volatile
  1867     0104                     l1368:
  1868                           
  1869                           ;interrupt.c: 76:       MuxTemp();
  1870     0104  22EA               	fcall	_MuxTemp
  1871     0105                     l1370:
  1872                           
  1873                           ;interrupt.c: 77:    adcState = 1;
  1874     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1875     0106  01B3               	clrf	ADCProcessing@adcState
  1876     0107  0AB3               	incf	ADCProcessing@adcState,f
  1877                           
  1878                           ;interrupt.c: 78:       break;
  1879     0108  2973               	goto	l210
  1880     0109                     l1372:
  1881                           
  1882                           ;interrupt.c: 83:       if (adcValue < 200){
  1883     0109  3000               	movlw	0
  1884     010A  0240               	subwf	ADCProcessing@adcValue+1,w
  1885     010B  30C8               	movlw	200
  1886     010C  1903               	skipnz
  1887     010D  023F               	subwf	ADCProcessing@adcValue,w
  1888     010E  1803               	skipnc
  1889     010F  2911               	goto	u531
  1890     0110  2912               	goto	u530
  1891     0111                     u531:
  1892     0111  2915               	goto	l1376
  1893     0112                     u530:
  1894     0112                     l1374:
  1895                           
  1896                           ;interrupt.c: 84:         GP5 = 1;
  1897     0112  1685               	bsf	5,5	;volatile
  1898                           
  1899                           ;interrupt.c: 86:              prmFlags.errorHighTemperature = 0;
  1900     0113  11B9               	bcf	_prmFlags,3	;volatile
  1901                           
  1902                           ;interrupt.c: 87:     }
  1903     0114  295F               	goto	l1400
  1904     0115                     l1376:
  1905     0115  3000               	movlw	0
  1906     0116  0240               	subwf	ADCProcessing@adcValue+1,w
  1907     0117  30C9               	movlw	201
  1908     0118  1903               	skipnz
  1909     0119  023F               	subwf	ADCProcessing@adcValue,w
  1910     011A  1C03               	skipc
  1911     011B  291D               	goto	u541
  1912     011C  291E               	goto	u540
  1913     011D                     u541:
  1914     011D  2934               	goto	l1386
  1915     011E                     u540:
  1916     011E                     l1378:
  1917     011E  3003               	movlw	3
  1918     011F  0240               	subwf	ADCProcessing@adcValue+1,w
  1919     0120  30A2               	movlw	162
  1920     0121  1903               	skipnz
  1921     0122  023F               	subwf	ADCProcessing@adcValue,w
  1922     0123  1803               	skipnc
  1923     0124  2926               	goto	u551
  1924     0125  2927               	goto	u550
  1925     0126                     u551:
  1926     0126  2934               	goto	l1386
  1927     0127                     u550:
  1928     0127                     l1380:
  1929                           
  1930                           ;interrupt.c: 90:               if((prmFlags.errorUnderVoltage == 0) && (prmFlags.errorO
      +                          verVoltage == 0)) GP5 = 0;
  1931     0127  18B9               	btfsc	_prmFlags,1	;volatile
  1932     0128  292A               	goto	u561
  1933     0129  292B               	goto	u560
  1934     012A                     u561:
  1935     012A  2931               	goto	l201
  1936     012B                     u560:
  1937     012B                     l1382:
  1938     012B  1939               	btfsc	_prmFlags,2	;volatile
  1939     012C  292E               	goto	u571
  1940     012D  292F               	goto	u570
  1941     012E                     u571:
  1942     012E  2931               	goto	l201
  1943     012F                     u570:
  1944     012F                     l1384:
  1945     012F  1285               	bcf	5,5	;volatile
  1946     0130  2932               	goto	l202
  1947     0131                     l201:	
  1948                           ;interrupt.c: 91:           else GP5 = 1;
  1949                           
  1950     0131  1685               	bsf	5,5	;volatile
  1951     0132                     l202:
  1952                           
  1953                           ;interrupt.c: 93:        prmFlags.errorHighTemperature = 0;
  1954     0132  11B9               	bcf	_prmFlags,3	;volatile
  1955                           
  1956                           ;interrupt.c: 94:                        }
  1957     0133  295F               	goto	l1400
  1958     0134                     l1386:
  1959     0134  3003               	movlw	3
  1960     0135  0240               	subwf	ADCProcessing@adcValue+1,w
  1961     0136  30A3               	movlw	163
  1962     0137  1903               	skipnz
  1963     0138  023F               	subwf	ADCProcessing@adcValue,w
  1964     0139  1C03               	skipc
  1965     013A  293C               	goto	u581
  1966     013B  293D               	goto	u580
  1967     013C                     u581:
  1968     013C  2953               	goto	l1396
  1969     013D                     u580:
  1970     013D                     l1388:
  1971     013D  3003               	movlw	3
  1972     013E  0240               	subwf	ADCProcessing@adcValue+1,w
  1973     013F  30CA               	movlw	202
  1974     0140  1903               	skipnz
  1975     0141  023F               	subwf	ADCProcessing@adcValue,w
  1976     0142  1803               	skipnc
  1977     0143  2945               	goto	u591
  1978     0144  2946               	goto	u590
  1979     0145                     u591:
  1980     0145  2953               	goto	l1396
  1981     0146                     u590:
  1982     0146                     l1390:
  1983                           
  1984                           ;interrupt.c: 97:              if((prmFlags.errorUnderVoltage == 0) && (prmFlags.errorOv
      +                          erVoltage == 0)) GP5 = 0;
  1985     0146  18B9               	btfsc	_prmFlags,1	;volatile
  1986     0147  2949               	goto	u601
  1987     0148  294A               	goto	u600
  1988     0149                     u601:
  1989     0149  2950               	goto	l205
  1990     014A                     u600:
  1991     014A                     l1392:
  1992     014A  1939               	btfsc	_prmFlags,2	;volatile
  1993     014B  294D               	goto	u611
  1994     014C  294E               	goto	u610
  1995     014D                     u611:
  1996     014D  2950               	goto	l205
  1997     014E                     u610:
  1998     014E                     l1394:
  1999     014E  1285               	bcf	5,5	;volatile
  2000     014F  2951               	goto	l206
  2001     0150                     l205:	
  2002                           ;interrupt.c: 98:           else GP5 = 1;
  2003                           
  2004     0150  1685               	bsf	5,5	;volatile
  2005     0151                     l206:
  2006                           
  2007                           ;interrupt.c: 100:        prmFlags.errorHighTemperature = 0;
  2008     0151  11B9               	bcf	_prmFlags,3	;volatile
  2009                           
  2010                           ;interrupt.c: 101:                        }
  2011     0152  295F               	goto	l1400
  2012     0153                     l1396:
  2013     0153  3003               	movlw	3
  2014     0154  0240               	subwf	ADCProcessing@adcValue+1,w
  2015     0155  30CB               	movlw	203
  2016     0156  1903               	skipnz
  2017     0157  023F               	subwf	ADCProcessing@adcValue,w
  2018     0158  1C03               	skipc
  2019     0159  295B               	goto	u621
  2020     015A  295C               	goto	u620
  2021     015B                     u621:
  2022     015B  295F               	goto	l203
  2023     015C                     u620:
  2024     015C                     l1398:
  2025                           
  2026                           ;interrupt.c: 104:              GP5 = 1;
  2027     015C  1685               	bsf	5,5	;volatile
  2028                           
  2029                           ;interrupt.c: 105:                 prmFlags.errorHighTemperature = 1;
  2030     015D  15B9               	bsf	_prmFlags,3	;volatile
  2031     015E  295F               	goto	l1400
  2032     015F                     l203:
  2033     015F                     l1400:
  2034                           
  2035                           ;interrupt.c: 109:      MuxVoltage();
  2036     015F  22DB               	fcall	_MuxVoltage
  2037     0160                     l1402:
  2038                           
  2039                           ;interrupt.c: 110:      adcState = 0;
  2040     0160  1283               	bcf	3,5	;RP0=0, select bank0
  2041     0161  01B3               	clrf	ADCProcessing@adcState
  2042                           
  2043                           ;interrupt.c: 111:  break;
  2044     0162  2973               	goto	l210
  2045     0163                     l1406:
  2046     0163  0833               	movf	ADCProcessing@adcState,w
  2047     0164  00BD               	movwf	??_ADCProcessing
  2048     0165  01BE               	clrf	??_ADCProcessing+1
  2049                           
  2050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2051                           ; Switch size 1, requested type "simple"
  2052                           ; Number of cases is 1, Range of values is 0 to 0
  2053                           ; switch strategies available:
  2054                           ; Name         Instructions Cycles
  2055                           ; simple_byte            4     3 (average)
  2056                           ; direct_byte            7     6 (fixed)
  2057                           ; jumptable            260     6 (fixed)
  2058                           ;	Chosen strategy is simple_byte
  2059     0166  083E               	movf	??_ADCProcessing+1,w
  2060     0167  3A00               	xorlw	0	; case 0
  2061     0168  1903               	skipnz
  2062     0169  296B               	goto	l1610
  2063     016A  2973               	goto	l210
  2064     016B                     l1610:
  2065                           
  2066                           ; Switch size 1, requested type "simple"
  2067                           ; Number of cases is 2, Range of values is 0 to 1
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; simple_byte            7     4 (average)
  2071                           ; direct_byte            8     6 (fixed)
  2072                           ; jumptable            260     6 (fixed)
  2073                           ;	Chosen strategy is simple_byte
  2074     016B  083D               	movf	??_ADCProcessing,w
  2075     016C  3A00               	xorlw	0	; case 0
  2076     016D  1903               	skipnz
  2077     016E  28D1               	goto	l1352
  2078     016F  3A01               	xorlw	1	; case 1
  2079     0170  1903               	skipnz
  2080     0171  2909               	goto	l1372
  2081     0172  2973               	goto	l210
  2082     0173                     l210:
  2083     0173  0008               	return
  2084     0174                     __end_of_ADCProcessing:
  2085                           
  2086                           	psect	text9
  2087     02DB                     __ptext9:	
  2088 ;; *************** function _MuxVoltage *****************
  2089 ;; Defined at:
  2090 ;;		line 12 in file "interrupt.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0
  2104 ;;      Params:         0       0
  2105 ;;      Locals:         0       0
  2106 ;;      Temps:          0       1
  2107 ;;      Totals:         0       1
  2108 ;;Total ram usage:        1 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_Init_uC
  2115 ;;		_ADCProcessing
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119     02DB                     _MuxVoltage:	
  2120                           ;psect for function _MuxVoltage
  2121                           
  2122     02DB                     l1270:	
  2123                           ;incstack = 0
  2124                           ; Regs used in _MuxVoltage: [wreg+status,2]
  2125                           
  2126                           
  2127                           ;interrupt.c: 13:        ADCON0 = 0;
  2128     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2129     02DC  019F               	clrf	31	;volatile
  2130     02DD                     l1272:
  2131                           
  2132                           ;interrupt.c: 14:        ADON = 1;
  2133     02DD  141F               	bsf	31,0	;volatile
  2134     02DE                     l1274:
  2135                           
  2136                           ;interrupt.c: 15:        ADFM = 1;
  2137     02DE  179F               	bsf	31,7	;volatile
  2138     02DF                     l1276:
  2139                           
  2140                           ;interrupt.c: 16:        CHS1 = 0;
  2141     02DF  119F               	bcf	31,3	;volatile
  2142     02E0                     l1278:
  2143                           
  2144                           ;interrupt.c: 17:        CHS0 = 1;
  2145     02E0  151F               	bsf	31,2	;volatile
  2146     02E1                     l1280:
  2147                           
  2148                           ;interrupt.c: 18:        ADIF = 0;
  2149     02E1  130C               	bcf	12,6	;volatile
  2150     02E2                     l1282:
  2151                           
  2152                           ;interrupt.c: 19:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  2153     02E2  3010               	movlw	16
  2154     02E3  00BC               	movwf	??_MuxVoltage
  2155     02E4                     u827:
  2156     02E4  0BBC               	decfsz	??_MuxVoltage,f
  2157     02E5  2AE4               	goto	u827
  2158     02E6  0000               	nop
  2159     02E7                     l1284:
  2160                           
  2161                           ;interrupt.c: 20:        GO = 1;
  2162     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2163     02E8  149F               	bsf	31,1	;volatile
  2164     02E9                     l172:
  2165     02E9  0008               	return
  2166     02EA                     __end_of_MuxVoltage:
  2167                           
  2168                           	psect	text10
  2169     02EA                     __ptext10:	
  2170 ;; *************** function _MuxTemp *****************
  2171 ;; Defined at:
  2172 ;;		line 24 in file "interrupt.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0
  2186 ;;      Params:         0       0
  2187 ;;      Locals:         0       0
  2188 ;;      Temps:          0       1
  2189 ;;      Totals:         0       1
  2190 ;;Total ram usage:        1 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_ADCProcessing
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200     02EA                     _MuxTemp:	
  2201                           ;psect for function _MuxTemp
  2202                           
  2203     02EA                     l1286:	
  2204                           ;incstack = 0
  2205                           ; Regs used in _MuxTemp: [wreg+status,2]
  2206                           
  2207                           
  2208                           ;interrupt.c: 25:        ADCON0 = 0;
  2209     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2210     02EB  019F               	clrf	31	;volatile
  2211     02EC                     l1288:
  2212                           
  2213                           ;interrupt.c: 26:        ADON = 1;
  2214     02EC  141F               	bsf	31,0	;volatile
  2215     02ED                     l1290:
  2216                           
  2217                           ;interrupt.c: 27:        ADFM = 1;
  2218     02ED  179F               	bsf	31,7	;volatile
  2219     02EE                     l1292:
  2220                           
  2221                           ;interrupt.c: 28:        CHS1 = 0;
  2222     02EE  119F               	bcf	31,3	;volatile
  2223     02EF                     l1294:
  2224                           
  2225                           ;interrupt.c: 29:        CHS0 = 0;
  2226     02EF  111F               	bcf	31,2	;volatile
  2227     02F0                     l1296:
  2228                           
  2229                           ;interrupt.c: 30:        ADIF = 0;
  2230     02F0  130C               	bcf	12,6	;volatile
  2231     02F1                     l1298:
  2232                           
  2233                           ;interrupt.c: 31:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  2234     02F1  3010               	movlw	16
  2235     02F2  00BC               	movwf	??_MuxTemp
  2236     02F3                     u837:
  2237     02F3  0BBC               	decfsz	??_MuxTemp,f
  2238     02F4  2AF3               	goto	u837
  2239     02F5  0000               	nop
  2240     02F6                     l1300:
  2241                           
  2242                           ;interrupt.c: 32:        GO = 1;
  2243     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2244     02F7  149F               	bsf	31,1	;volatile
  2245     02F8                     l175:
  2246     02F8  0008               	return
  2247     02F9                     __end_of_MuxTemp:
  2248                           
  2249                           	psect	text11
  2250     02C6                     __ptext11:	
  2251 ;; *************** function _ISR *****************
  2252 ;; Defined at:
  2253 ;;		line 35 in file "interrupt.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0
  2267 ;;      Params:         0       0
  2268 ;;      Locals:         0       0
  2269 ;;      Temps:          0       2
  2270 ;;      Totals:         0       2
  2271 ;;Total ram usage:        2 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		Interrupt level 1
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280     02C6                     _ISR:	
  2281                           ;psect for function _ISR
  2282                           
  2283     02C6                     i1l1538:
  2284                           
  2285                           ;interrupt.c: 38:     if (TMR0IF == 1){
  2286     02C6  1D0B               	btfss	11,2	;volatile
  2287     02C7  2AC9               	goto	u81_21
  2288     02C8  2ACA               	goto	u81_20
  2289     02C9                     u81_21:
  2290     02C9  2AD4               	goto	i1l181
  2291     02CA                     u81_20:
  2292     02CA                     i1l1540:
  2293                           
  2294                           ;interrupt.c: 39:             TMR0 = 5;
  2295     02CA  3005               	movlw	5
  2296     02CB  0081               	movwf	1	;volatile
  2297                           
  2298                           ;interrupt.c: 40:          ++cnt0;
  2299     02CC  3001               	movlw	1
  2300     02CD  07B1               	addwf	_cnt0,f	;volatile
  2301     02CE  1803               	skipnc
  2302     02CF  0AB2               	incf	_cnt0+1,f	;volatile
  2303     02D0  3000               	movlw	0
  2304     02D1  07B2               	addwf	_cnt0+1,f	;volatile
  2305     02D2                     i1l1542:
  2306                           
  2307                           ;interrupt.c: 41:          TMR0IF = 0;
  2308     02D2  110B               	bcf	11,2	;volatile
  2309     02D3                     i1l1544:
  2310                           
  2311                           ;interrupt.c: 42:             TMR0IE = 1;
  2312     02D3  168B               	bsf	11,5	;volatile
  2313     02D4                     i1l181:
  2314     02D4  083B               	movf	??_ISR+1,w
  2315     02D5  008A               	movwf	10
  2316     02D6  0E3A               	swapf	??_ISR,w
  2317     02D7  0083               	movwf	3
  2318     02D8  0EDE               	swapf	btemp,f
  2319     02D9  0E5E               	swapf	btemp,w
  2320     02DA  0009               	retfie
  2321     02DB                     __end_of_ISR:
  2322     005E                     btemp	set	94	;btemp
  2323     005E                     wtemp0	set	94
  2324                           
  2325                           	psect	intentry
  2326     0004                     __pintentry:	
  2327                           ;incstack = 0
  2328                           ; Regs used in _ISR: [wreg]
  2329                           
  2330     0004                     interrupt_function:
  2331     005E                     saved_w	set	btemp
  2332     0004  00DE               	movwf	btemp
  2333     0005  0E03               	swapf	3,w
  2334     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2335     0007  00BA               	movwf	??_ISR
  2336     0008  080A               	movf	10,w
  2337     0009  00BB               	movwf	??_ISR+1
  2338     000A  2AC6               	ljmp	_ISR
  2339                           
  2340                           	psect	config
  2341                           
  2342                           ;Config register CONFIG @ 0x2007
  2343                           ;	Oscillator Selection bits
  2344                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2345                           ;	Watchdog Timer Enable bit
  2346                           ;	WDTE = OFF, WDT disabled
  2347                           ;	Power-Up Timer Enable bit
  2348                           ;	PWRTE = OFF, PWRT disabled
  2349                           ;	GP3/MCLR pin function select
  2350                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  2351                           ;	Brown-out Detect Enable bit
  2352                           ;	BOREN = ON, BOD enabled
  2353                           ;	Code Protection bit
  2354                           ;	CP = OFF, Program Memory code protection is disabled
  2355                           ;	Data Code Protection bit
  2356                           ;	CPD = OFF, Data memory code protection is disabled
  2357     2007                     	org	8199
  2358     2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     20      46

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_playAlert
    _playAlert->_EnqueueBeeps
    _EnqueueBeeps->___awmod
    _Init_uC->_MuxVoltage
    _BeepsStateMachine->___awmod
    _ADCProcessing->_MuxTemp
    _ADCProcessing->_MuxVoltage

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3028
                      _ADCProcessing
                  _BeepsStateMachine
                         _InitTimer0
                            _Init_uC
                          _playAlert
 ---------------------------------------------------------------------------------
 (1) _playAlert                                            9     9      0    1858
                                             11 BANK0      9     9      0
                       _EnqueueBeeps
 ---------------------------------------------------------------------------------
 (2) _EnqueueBeeps                                         3     0      3    1600
                                              8 BANK0      3     0      3
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BeepsStateMachine                                    2     2      0     948
                                              8 BANK0      2     2      0
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     196
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADCProcessing                                        4     4      0     222
                                              3 BANK0      4     4      0
                            _MuxTemp
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (2) _MuxVoltage                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MuxTemp                                              1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCProcessing
     _MuxTemp
     _MuxVoltage
   _BeepsStateMachine
     ___awmod
     ___bmul
   _InitTimer0
   _Init_uC
     _MuxVoltage
   _playAlert
     _EnqueueBeeps
       ___awmod
       ___bmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     14      2E       4       74.2%
ABS                  0      0      2E       5        0.0%
DATA                 0      0      2E       6        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Sep 04 19:31:47 2025

                           ___bmul@product 003D                                         l34 028F  
                                       l70 0035                                         l63 0017  
                                       l57 01F9                                         l73 0043  
                                       l67 0026                                         l87 00C4  
                                       _GO 00F9                                         fsr 0004  
                                      l201 0131                                        l202 0132  
                                      l210 0173                                        l203 015F  
                                      l205 0150                                        l206 0151  
                                      l134 0308                                        l137 02AF  
                                      l322 02C5                                        l172 02E9  
                                      l190 00E9                                        l175 02F8  
                                      l191 00EA                                        l462 0253  
                                      _GP2 002A                                        _GP4 002C  
                                      _GP5 002D                                        _GIE 005F  
                                      u410 0228                                        u411 0227  
                                      u500 00E7                                        u420 0232  
                                      u501 00E6                                        u421 0231  
                                      u405 021A                                        u510 00F6  
                                      u350 02B7                                        u511 00F5  
                                      u351 02B6                                        u600 014A  
                                      u520 0102                                        u440 0245  
                                      u360 02C4                                        u601 0149  
                                      u521 0101                                        u441 0244  
                                      u425 022E                                        u361 02C3  
                                      u610 014E                                        u530 0112  
                                      u450 024A                                        u370 0200  
                                      u611 014D                                        u531 0111  
                                      u451 0249                                        u435 0239  
                                      u371 01FF                                        u620 015C  
                                      u540 011E                                        u380 020B  
                                      u460 0269                                        u700 004E  
                                      _ISR 02C6                                        u621 015B  
                                      u541 011D                                        u381 020A  
                                      u461 0268                                        u701 004D  
                                      u550 0127                                        u470 00CA  
                                      u390 0216                                        u710 007A  
                                      u630 001B                                        u551 0126  
                                      u471 00C9                                        u391 0215  
                                      u711 0079                                        u631 001A  
                                      u560 012B                                        u480 00DA  
                                      u800 01DB                                        u720 0093  
                                      u640 0023                                        u561 012A  
                                      u481 00D9                                        u801 01DA  
                                      u721 0092                                        u641 0022  
                                      u570 012F                                        u490 00E3  
                                      u730 00AB                                        u650 002A  
                                      u571 012E                                        u491 00E2  
                                      u731 00AA                                        u651 0029  
                                      u580 013D                                        u740 00C4  
                                      u660 0032                                        u581 013C  
                                      u741 00C3                                        u661 0031  
                                      u590 0146                                        u750 017B  
                                      u670 0039                                        u591 0145  
                                      u751 017A                                        u735 00A7  
                                      u671 0038                                        u760 01B2  
                                      u680 0040                                        u761 01B1  
                                      u681 003F                                        u770 01C1  
                                      u690 0047                                        u827 02E4  
                                      u771 01C0                                        u691 0046  
                                      u780 01C8                                        u837 02F3  
                                      u781 01C7                                        u765 01AE  
                                      u790 01CF                                        u791 01CE  
                                      fsr0 0004                                        indf 0000  
                             ___awmod@sign 0041                      ADCProcessing@adcValue 003F  
                    ADCProcessing@adcState 0033                                       ?_ISR 003A  
                                     l1210 02B2                                       l1300 02F6  
                                     l1220 02BF                                       l1212 02B3  
                                     l1230 0200                                       l1222 02C4  
                                     l1214 02B7                                       l1302 0301  
                                     l1310 0290                                       l1400 015F  
                                     l1240 0216                                       l1232 0205  
                                     l1216 02BB                                       l1304 0304  
                                     l1320 029A                                       l1312 0293  
                                     l1402 0160                                       l1250 0232  
                                     l1242 0219                                       l1234 0207  
                                     l1226 01FA                                       l1218 02BD  
                                     l1306 0306                                       l1330 02A4  
                                     l1322 029C                                       l1314 0295  
                                     l1260 024F                                       l1252 0238  
                                     l1244 0220                                       l1236 020B  
                                     l1228 01FC                                       l1500 01B4  
                                     l1308 0307                                       l1340 02AB  
                                     l1332 02A5                                       l1324 029E  
                                     l1316 0296                                       l1420 0023  
                                     l1412 0013                                       l1270 02DB  
                                     l1406 0163                                       l1350 00CA  
                                     l1254 023F                                       l1246 0224  
                                     l1238 0210                                       l1510 01C8  
                                     l1502 01B6                                       l1342 02AC  
                                     l1334 02A7                                       l1326 02A0  
                                     l1318 0298                                       l1430 003B  
                                     l1422 002A                                       l1414 001B  
                                     l1280 02E1                                       l1272 02DD  
                                     l1360 00ED                                       l1352 00D1  
                                     l1248 0228                                       l1256 0245  
                                     l1520 01E0                                       l1512 01CA  
                                     l1504 01B8                                       l1344 02AE  
                                     l1336 02A8                                       l1328 02A2  
                                     l1264 0254                                       l1440 004A  
                                     l1432 003C                                       l1424 002E  
                                     l1416 001D                                       l1290 02ED  
                                     l1282 02E2                                       l1274 02DE  
                                     l1610 016B                                       l1370 0105  
                                     l1362 00F6                                       l1354 00DA  
                                     l1346 00C5                                       l1258 024A  
                                     l1514 01CF                                       l1506 01C1  
                                     l1338 02AA                                       l1266 0269  
                                     l1442 004E                                       l1434 0040  
                                     l1426 0032                                       l1450 0067  
                                     l1418 001F                                       l1530 0309  
                                     l1292 02EE                                       l1284 02E7  
                                     l1276 02DF                                       l1380 0127  
                                     l1372 0109                                       l1364 00F9  
                                     l1356 00E3                                       l1348 00C5  
                                     l1516 01D2                                       l1508 01C3  
                                     l1524 01E2                                       l1268 0280  
                                     l1460 0088                                       l1452 006A  
                                     l1444 004F                                       l1436 0047  
                                     l1428 0039                                       l1532 030B  
                                     l1294 02EF                                       l1286 02EA  
                                     l1278 02E0                                       l1390 0146  
                                     l1382 012B                                       l1374 0112  
                                     l1366 0102                                       l1358 00E7  
                                     l1518 01DB                                       l1470 00B3  
                                     l1454 006C                                       l1462 008D  
                                     l1606 0059                                       l1438 0048  
                                     l1534 030C                                       l1296 02F0  
                                     l1288 02EC                                       l1392 014A  
                                     l1384 012F                                       l1376 0115  
                                     l1368 0104                                       l1608 01EB  
                                     l1480 0174                                       l1472 00B9  
                                     l1464 0093                                       l1456 007A  
                                     l1448 0051                                       l1536 030D  
                                     l1298 02F1                                       l1394 014E  
                                     l1378 011E                                       l1386 0134  
                                     l1490 01A2                                       l1482 0175  
                                     l1466 0095                                       l1474 00BE  
                                     l1458 0082                                       l1388 013D  
                                     l1396 0153                                       l1492 01A4  
                                     l1484 017B                                       l1468 00AB  
                                     l1398 015C                                       l1494 01A6  
                                     l1486 0192                                       l1496 01A8  
                                     l1488 01A1                                       l1498 01B2  
                                     _ADIF 0066                                       _ADFM 00FF  
                                     _ADON 00F8                                       _CHS0 00FA  
                                     _CHS1 00FB                                       _GPIO 0005  
                                     _PEIE 005E                                       _VCFG 00FE  
                                     _TMR0 0001                              ?_EnqueueBeeps 0042  
                                     _cnt0 0031                                       _main 0309  
                                     btemp 005E                                       start 000B  
                        ___bmul@multiplier 003E                            __end_of_Init_uC 02B0  
                                    ??_ISR 003A                            __end_of_MuxTemp 02F9  
                                    ?_main 003A                            __end_of___awmod 0254  
                                    _CMCON 0019                                      _ANSEL 009F  
                                    i1l181 02D4                                      u81_20 02CA  
                                    u81_21 02C9                                      _VRCON 0099  
                 EnqueueBeeps@allowTimeout 0044                             ??_EnqueueBeeps 0000  
                                    pclath 000A                                      status 0003  
                                    wtemp0 005E      BeepsStateMachine@stateMachineDuration 002F  
                          __initialization 000C                                 _InitTimer0 0301  
                             __end_of_main 0310                                     ??_main 0000  
                                   _ADCON0 001F                                     _ADRESH 001E  
                                   _ADRESL 009E                                     i1l1540 02CA  
                                   i1l1542 02D2                                     i1l1544 02D3  
                                   i1l1538 02C6                                     _TMR0IE 005D  
                                   _TMR0IF 005A                                     _TRISIO 0085  
                                ??_Init_uC 0000                                  ??_MuxTemp 003C  
                                   ___bmul 02B0                                  ??___awmod 0000  
                               _MuxVoltage 02DB                            ___awmod@divisor 003C  
                          ___awmod@counter 0040                                     saved_w 005E  
                  __end_of__initialization 0011                              playAlert@i_85 004B  
                      ___bmul@multiplicand 003C                                ?_InitTimer0 003A  
                           __pcstackCOMMON 0000                       __end_of_EnqueueBeeps 0290  
                               _beepsQueue 0020                                 __pbssBANK0 0020  
                            _ADCProcessing 00C5                                 __pmaintext 0309  
                                  ?___bmul 003C                                 __pintentry 0004  
                              ?_MuxVoltage 003A                                    _TRISIO0 0428  
                                  _TRISIO1 0429                                    _TRISIO2 042A  
                                  _TRISIO4 042C                                    _TRISIO5 042D  
                           ?_ADCProcessing 003A             playAlert@howMuchTimesPlayShort 004D  
                                  _Init_uC 0290                                    _MuxTemp 02EA  
                                  ___awmod 01FA                     BeepsStateMachine@state 0036  
                                  __ptext1 0013                                    __ptext2 0254  
                                  __ptext3 0290                                    __ptext4 0301  
                                  __ptext5 0174                                    __ptext6 02B0  
                                  __ptext7 01FA                                    __ptext8 00C5  
                                  __ptext9 02DB                           ___awmod@dividend 003E  
                        __end_of_playAlert 00C5                                    clrloop0 02FA  
                     end_of_initialization 0011                            ??_ADCProcessing 003D  
                             _EnqueueBeeps 0254                       EnqueueBeeps@duration 0042  
                             ??_InitTimer0 0000                             __end_of___bmul 02C6  
                      start_initialization 000C                                __end_of_ISR 02DB  
                       __end_of_InitTimer0 0309                                   ??___bmul 0000  
                             ??_MuxVoltage 003C                                  ___latbits 0000  
                            __pcstackBANK0 003A                         __end_of_MuxVoltage 02EA  
                               playAlert@i 004A                                   ?_Init_uC 003A  
                                 ?_MuxTemp 003A                                   ?___awmod 003C  
            playAlert@howMuchTimesPlayLong 004C                          interrupt_function 0004  
                                _playAlert 0013                                  clear_ram0 02F9  
                      playAlert@totalBeeps 0049                        playAlert@soundState 0034  
                                _queueHead 0038                                  _queueTail 0037  
                               ?_playAlert 003A                                   __ptext10 02EA  
                                 __ptext11 02C6                      __end_of_ADCProcessing 0174  
                        _BeepsStateMachine 0174                         ?_BeepsStateMachine 003A  
                                 _prmFlags 0039                        ??_BeepsStateMachine 0042  
                __end_of_BeepsStateMachine 01FA                                   intlevel1 0000  
                              ??_playAlert 0045                                 _OPTION_REG 0081  
BeepsStateMachine@stateMachineAllowTimeout 0035  
