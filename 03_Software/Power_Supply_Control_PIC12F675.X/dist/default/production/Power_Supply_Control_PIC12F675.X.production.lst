

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Sep 18 09:30:02 2025

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x5E,2
    24     0000                     
    25                           ; Generated 17/08/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC12F675 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0019                     	;# 
    73     001E                     	;# 
    74     001F                     	;# 
    75     0081                     	;# 
    76     0085                     	;# 
    77     008C                     	;# 
    78     008E                     	;# 
    79     0090                     	;# 
    80     0095                     	;# 
    81     0096                     	;# 
    82     0096                     	;# 
    83     0099                     	;# 
    84     009A                     	;# 
    85     009A                     	;# 
    86     009B                     	;# 
    87     009C                     	;# 
    88     009D                     	;# 
    89     009E                     	;# 
    90     009F                     	;# 
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000E                     	;# 
   101     000E                     	;# 
   102     000F                     	;# 
   103     0010                     	;# 
   104     0019                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     008C                     	;# 
   110     008E                     	;# 
   111     0090                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0096                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0019                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     008C                     	;# 
   142     008E                     	;# 
   143     0090                     	;# 
   144     0095                     	;# 
   145     0096                     	;# 
   146     0096                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009A                     	;# 
   150     009B                     	;# 
   151     009C                     	;# 
   152     009D                     	;# 
   153     009E                     	;# 
   154     009F                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0019                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     008C                     	;# 
   174     008E                     	;# 
   175     0090                     	;# 
   176     0095                     	;# 
   177     0096                     	;# 
   178     0096                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009A                     	;# 
   182     009B                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     0000                     	;# 
   188     0001                     	;# 
   189     0002                     	;# 
   190     0003                     	;# 
   191     0004                     	;# 
   192     0005                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000E                     	;# 
   197     000E                     	;# 
   198     000F                     	;# 
   199     0010                     	;# 
   200     0019                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     008C                     	;# 
   206     008E                     	;# 
   207     0090                     	;# 
   208     0095                     	;# 
   209     0096                     	;# 
   210     0096                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     001E                     _ADRESH	set	30
   220     001F                     _ADCON0	set	31
   221     0005                     _GPIO	set	5
   222     0019                     _CMCON	set	25
   223     0001                     _TMR0	set	1
   224     00F9                     _GO	set	249
   225     0066                     _ADIF	set	102
   226     00FA                     _CHS0	set	250
   227     00FB                     _CHS1	set	251
   228     00FF                     _ADFM	set	255
   229     00F8                     _ADON	set	248
   230     005F                     _GIE	set	95
   231     005E                     _PEIE	set	94
   232     00FE                     _VCFG	set	254
   233     002C                     _GP4	set	44
   234     002D                     _GP5	set	45
   235     005D                     _TMR0IE	set	93
   236     005A                     _TMR0IF	set	90
   237     002A                     _GP2	set	42
   238     009E                     _ADRESL	set	158
   239     009F                     _ANSEL	set	159
   240     0085                     _TRISIO	set	133
   241     0099                     _VRCON	set	153
   242     0081                     _OPTION_REG	set	129
   243     0429                     _TRISIO1	set	1065
   244     0428                     _TRISIO0	set	1064
   245     042C                     _TRISIO4	set	1068
   246     042D                     _TRISIO5	set	1069
   247     042A                     _TRISIO2	set	1066
   248                           
   249                           	psect	cinit
   250     000C                     start_initialization:	
   251                           ; #config settings
   252                           
   253     000C                     __initialization:
   254                           
   255                           ; Clear objects allocated to BANK0
   256     000C  1383               	bcf	3,7	;select IRP bank0
   257     000D  3020               	movlw	low __pbssBANK0
   258     000E  0084               	movwf	4
   259     000F  303A               	movlw	low (__pbssBANK0+26)
   260     0010  22E3               	fcall	clear_ram0
   261     0011                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264     0011                     __end_of__initialization:
   265     0011  0183               	clrf	3
   266     0012  2AF3               	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269     0020                     __pbssBANK0:
   270     0020                     _beepsQueue:
   271     0020                     	ds	15
   272     002F                     BeepsStateMachine@stateMachineDuration:
   273     002F                     	ds	2
   274     0031                     _cnt0:
   275     0031                     	ds	2
   276     0033                     ADCProcessing@adcState:
   277     0033                     	ds	1
   278     0034                     playAlert@soundState:
   279     0034                     	ds	1
   280     0035                     BeepsStateMachine@stateMachineAllowTimeout:
   281     0035                     	ds	1
   282     0036                     BeepsStateMachine@state:
   283     0036                     	ds	1
   284     0037                     _queueTail:
   285     0037                     	ds	1
   286     0038                     _queueHead:
   287     0038                     	ds	1
   288     0039                     _prmFlags:
   289     0039                     	ds	1
   290                           
   291                           	psect	clrtext
   292     02E3                     clear_ram0:	
   293                           ;	Called with FSR containing the base address, and
   294                           ;	W with the last address+1
   295                           
   296     02E3  0064               	clrwdt	;clear the watchdog before getting into this loop
   297     02E4                     clrloop0:
   298     02E4  0180               	clrf	0	;clear RAM location pointed to by FSR
   299     02E5  0A84               	incf	4,f	;increment pointer
   300     02E6  0604               	xorwf	4,w	;XOR with final address
   301     02E7  1903               	btfsc	3,2	;have we reached the end yet?
   302     02E8  3400               	retlw	0	;all done for this memory range, return
   303     02E9  0604               	xorwf	4,w	;XOR again to restore value
   304     02EA  2AE4               	goto	clrloop0	;do the next byte
   305                           
   306                           	psect	cstackCOMMON
   307     0000                     __pcstackCOMMON:
   308     0000                     ??_InitTimer0:
   309     0000                     ??_Init_uC:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0000                     ??_main:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0000                     ??_EnqueueBeeps:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0000                     ??___bmul:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0000                     ??___awmod:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           	psect	cstackBANK0
   326     003A                     __pcstackBANK0:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     003A                     ?_InitTimer0:
   330     003A                     ?_Init_uC:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     003A                     ?_ADCProcessing:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     003A                     ?_playAlert:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     003A                     ?_BeepsStateMachine:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     003A                     ?_MuxVoltage:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     003A                     ?_MuxTemp:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     003A                     ?_ISR:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     003A                     ??_ISR:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     003A                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357                           
   358                           ; 2 bytes @ 0x0
   359     003A                     	ds	2
   360     003C                     ??_MuxVoltage:
   361     003C                     ??_MuxTemp:	
   362                           ; 1 bytes @ 0x2
   363                           
   364     003C                     ?___bmul:	
   365                           ; 1 bytes @ 0x2
   366                           
   367     003C                     ?___awmod:	
   368                           ; 1 bytes @ 0x2
   369                           
   370     003C                     ___bmul@multiplicand:	
   371                           ; 2 bytes @ 0x2
   372                           
   373     003C                     ___awmod@divisor:	
   374                           ; 1 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378     003C                     	ds	1
   379     003D                     ??_ADCProcessing:
   380     003D                     ___bmul@product:	
   381                           ; 1 bytes @ 0x3
   382                           
   383                           
   384                           ; 1 bytes @ 0x3
   385     003D                     	ds	1
   386     003E                     ___bmul@multiplier:
   387     003E                     ___awmod@dividend:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 2 bytes @ 0x4
   392     003E                     	ds	1
   393     003F                     ADCProcessing@adcValue:
   394                           
   395                           ; 2 bytes @ 0x5
   396     003F                     	ds	1
   397     0040                     ___awmod@counter:
   398                           
   399                           ; 1 bytes @ 0x6
   400     0040                     	ds	1
   401     0041                     ___awmod@sign:
   402                           
   403                           ; 1 bytes @ 0x7
   404     0041                     	ds	1
   405     0042                     ??_BeepsStateMachine:
   406     0042                     ?_EnqueueBeeps:	
   407                           ; 1 bytes @ 0x8
   408                           
   409     0042                     EnqueueBeeps@duration:	
   410                           ; 1 bytes @ 0x8
   411                           
   412                           
   413                           ; 2 bytes @ 0x8
   414     0042                     	ds	2
   415     0044                     EnqueueBeeps@allowTimeout:
   416                           
   417                           ; 1 bytes @ 0xA
   418     0044                     	ds	1
   419     0045                     ??_playAlert:
   420                           
   421                           ; 1 bytes @ 0xB
   422     0045                     	ds	4
   423     0049                     playAlert@totalBeeps:
   424                           
   425                           ; 1 bytes @ 0xF
   426     0049                     	ds	1
   427     004A                     playAlert@i:
   428                           
   429                           ; 1 bytes @ 0x10
   430     004A                     	ds	1
   431     004B                     playAlert@i_85:
   432                           
   433                           ; 1 bytes @ 0x11
   434     004B                     	ds	1
   435     004C                     playAlert@howMuchTimesPlayLong:
   436                           
   437                           ; 1 bytes @ 0x12
   438     004C                     	ds	1
   439     004D                     playAlert@howMuchTimesPlayShort:
   440                           
   441                           ; 1 bytes @ 0x13
   442     004D                     	ds	1
   443                           
   444                           	psect	maintext
   445     02F3                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 66 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  2   14[None  ] int 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0
   465 ;;      Params:         0       0
   466 ;;      Locals:         0       0
   467 ;;      Temps:          0       0
   468 ;;      Totals:         0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels required when called: 4
   471 ;; This function calls:
   472 ;;		_ADCProcessing
   473 ;;		_BeepsStateMachine
   474 ;;		_InitTimer0
   475 ;;		_Init_uC
   476 ;;		_playAlert
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482     02F3                     _main:	
   483                           ;psect for function _main
   484                           
   485     02F3                     l1516:	
   486                           ;incstack = 0
   487                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   488                           
   489     02F3  22EB               	fcall	_InitTimer0
   490     02F4  227A               	fcall	_Init_uC
   491     02F5                     l1518:
   492     02F5  20C5               	fcall	_ADCProcessing
   493     02F6                     l1520:
   494     02F6  2013               	fcall	_playAlert
   495     02F7                     l1522:
   496     02F7  215E               	fcall	_BeepsStateMachine
   497     02F8  2AF5               	goto	l1518
   498     02F9  280B               	ljmp	start
   499     02FA                     __end_of_main:
   500                           
   501                           	psect	text1
   502     0013                     __ptext1:	
   503 ;; *************** function _playAlert *****************
   504 ;; Defined at:
   505 ;;		line 94 in file "sounds.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  i               1   17[BANK0 ] unsigned char 
   510 ;;  i               1   16[BANK0 ] unsigned char 
   511 ;;  howMuchTimes    1   19[BANK0 ] unsigned char 
   512 ;;  howMuchTimes    1   18[BANK0 ] unsigned char 
   513 ;;  totalBeeps      1   15[BANK0 ] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0
   523 ;;      Params:         0       0
   524 ;;      Locals:         0       5
   525 ;;      Temps:          0       4
   526 ;;      Totals:         0       9
   527 ;;Total ram usage:        9 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 3
   530 ;; This function calls:
   531 ;;		_EnqueueBeeps
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     0013                     _playAlert:	
   538                           ;psect for function _playAlert
   539                           
   540     0013                     l1398:	
   541                           ;incstack = 0
   542                           ; Regs used in _playAlert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   543                           
   544                           
   545                           ;sounds.c: 96:    uint8_t howMuchTimesPlayShort = 0;
   546     0013  1283               	bcf	3,5	;RP0=0, select bank0
   547     0014  01CD               	clrf	playAlert@howMuchTimesPlayShort
   548                           
   549                           ;sounds.c: 97:    uint8_t howMuchTimesPlayLong = 0;
   550     0015  01CC               	clrf	playAlert@howMuchTimesPlayLong
   551                           
   552                           ;sounds.c: 99:    static uint8_t soundState = 0;;sounds.c: 101:    switch (soundState){
   553     0016  2851               	goto	l1434
   554     0017                     l63:	
   555                           ;sounds.c: 102:      case 0:
   556                           
   557                           
   558                           ;sounds.c: 103:       if (prmFlags.errorUnderVoltage){
   559     0017  1CB9               	btfss	_prmFlags,1	;volatile
   560     0018  281A               	goto	u591
   561     0019  281B               	goto	u590
   562     001A                     u591:
   563     001A  281F               	goto	l1404
   564     001B                     u590:
   565     001B                     l1400:
   566                           
   567                           ;sounds.c: 104:         howMuchTimesPlayShort = 2;
   568     001B  3002               	movlw	2
   569     001C  00CD               	movwf	playAlert@howMuchTimesPlayShort
   570     001D                     l1402:
   571                           
   572                           ;sounds.c: 105:         howMuchTimesPlayLong = 1;
   573     001D  01CC               	clrf	playAlert@howMuchTimesPlayLong
   574     001E  0ACC               	incf	playAlert@howMuchTimesPlayLong,f
   575     001F                     l1404:
   576                           
   577                           ;sounds.c: 107:       if (!prmFlags.alarmState) soundState = 1;
   578     001F  1A39               	btfsc	_prmFlags,4	;volatile
   579     0020  2822               	goto	u601
   580     0021  2823               	goto	u600
   581     0022                     u601:
   582     0022  2867               	goto	l1436
   583     0023                     u600:
   584     0023                     l1406:
   585     0023  01B4               	clrf	playAlert@soundState
   586     0024  0AB4               	incf	playAlert@soundState,f
   587     0025  2867               	goto	l1436
   588     0026                     l67:	
   589                           ;sounds.c: 110:      case 1:
   590                           
   591                           
   592                           ;sounds.c: 111:      if (prmFlags.errorOverVoltage) {
   593     0026  1D39               	btfss	_prmFlags,2	;volatile
   594     0027  2829               	goto	u611
   595     0028  282A               	goto	u610
   596     0029                     u611:
   597     0029  282E               	goto	l1410
   598     002A                     u610:
   599     002A                     l1408:
   600                           
   601                           ;sounds.c: 112:          howMuchTimesPlayShort = 2;
   602     002A  3002               	movlw	2
   603     002B  00CD               	movwf	playAlert@howMuchTimesPlayShort
   604                           
   605                           ;sounds.c: 113:          howMuchTimesPlayLong = 2;
   606     002C  3002               	movlw	2
   607     002D  00CC               	movwf	playAlert@howMuchTimesPlayLong
   608     002E                     l1410:
   609                           
   610                           ;sounds.c: 115:       if (!prmFlags.alarmState) soundState = 2;
   611     002E  1A39               	btfsc	_prmFlags,4	;volatile
   612     002F  2831               	goto	u621
   613     0030  2832               	goto	u620
   614     0031                     u621:
   615     0031  2867               	goto	l1436
   616     0032                     u620:
   617     0032                     l1412:
   618     0032  3002               	movlw	2
   619     0033  00B4               	movwf	playAlert@soundState
   620     0034  2867               	goto	l1436
   621     0035                     l70:	
   622                           ;sounds.c: 118:      case 2:
   623                           
   624                           
   625                           ;sounds.c: 119:      if (prmFlags.errorHighTemperature){
   626     0035  1DB9               	btfss	_prmFlags,3	;volatile
   627     0036  2838               	goto	u631
   628     0037  2839               	goto	u630
   629     0038                     u631:
   630     0038  283C               	goto	l1418
   631     0039                     u630:
   632     0039                     l1414:
   633                           
   634                           ;sounds.c: 120:        howMuchTimesPlayShort = 3;
   635     0039  3003               	movlw	3
   636     003A  00CD               	movwf	playAlert@howMuchTimesPlayShort
   637     003B                     l1416:
   638                           
   639                           ;sounds.c: 121:        howMuchTimesPlayLong = 0;
   640     003B  01CC               	clrf	playAlert@howMuchTimesPlayLong
   641     003C                     l1418:
   642                           
   643                           ;sounds.c: 123:       if (!prmFlags.alarmState) soundState = 3;
   644     003C  1A39               	btfsc	_prmFlags,4	;volatile
   645     003D  283F               	goto	u641
   646     003E  2840               	goto	u640
   647     003F                     u641:
   648     003F  2867               	goto	l1436
   649     0040                     u640:
   650     0040                     l1420:
   651     0040  3003               	movlw	3
   652     0041  00B4               	movwf	playAlert@soundState
   653     0042  2867               	goto	l1436
   654     0043                     l73:	
   655                           ;sounds.c: 126:      case 3:
   656                           
   657                           
   658                           ;sounds.c: 127:       if (prmFlags.playLong){
   659     0043  1EB9               	btfss	_prmFlags,5	;volatile
   660     0044  2846               	goto	u651
   661     0045  2847               	goto	u650
   662     0046                     u651:
   663     0046  284A               	goto	l1426
   664     0047                     u650:
   665     0047                     l1422:
   666                           
   667                           ;sounds.c: 128:        howMuchTimesPlayShort = 0;
   668     0047  01CD               	clrf	playAlert@howMuchTimesPlayShort
   669     0048                     l1424:
   670                           
   671                           ;sounds.c: 129:        howMuchTimesPlayLong = 1;
   672     0048  01CC               	clrf	playAlert@howMuchTimesPlayLong
   673     0049  0ACC               	incf	playAlert@howMuchTimesPlayLong,f
   674     004A                     l1426:
   675                           
   676                           ;sounds.c: 131:       if (!prmFlags.alarmState) {
   677     004A  1A39               	btfsc	_prmFlags,4	;volatile
   678     004B  284D               	goto	u661
   679     004C  284E               	goto	u660
   680     004D                     u661:
   681     004D  2867               	goto	l1436
   682     004E                     u660:
   683     004E                     l1428:
   684                           
   685                           ;sounds.c: 132:        soundState = 0;
   686     004E  01B4               	clrf	playAlert@soundState
   687     004F                     l1430:
   688                           
   689                           ;sounds.c: 133:        prmFlags.playLong = 0;
   690     004F  12B9               	bcf	_prmFlags,5	;volatile
   691     0050  2867               	goto	l1436
   692     0051                     l1434:
   693     0051  0834               	movf	playAlert@soundState,w
   694     0052  00C5               	movwf	??_playAlert
   695     0053  01C6               	clrf	??_playAlert+1
   696                           
   697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   698                           ; Switch size 1, requested type "simple"
   699                           ; Number of cases is 1, Range of values is 0 to 0
   700                           ; switch strategies available:
   701                           ; Name         Instructions Cycles
   702                           ; simple_byte            4     3 (average)
   703                           ; direct_byte            7     6 (fixed)
   704                           ; jumptable            260     6 (fixed)
   705                           ;	Chosen strategy is simple_byte
   706     0054  0846               	movf	??_playAlert+1,w
   707     0055  3A00               	xorlw	0	; case 0
   708     0056  1903               	skipnz
   709     0057  2859               	goto	l1592
   710     0058  2867               	goto	l1436
   711     0059                     l1592:
   712                           
   713                           ; Switch size 1, requested type "simple"
   714                           ; Number of cases is 4, Range of values is 0 to 3
   715                           ; switch strategies available:
   716                           ; Name         Instructions Cycles
   717                           ; direct_byte           10     6 (fixed)
   718                           ; simple_byte           13     7 (average)
   719                           ; jumptable            260     6 (fixed)
   720                           ;	Chosen strategy is simple_byte
   721     0059  0845               	movf	??_playAlert,w
   722     005A  3A00               	xorlw	0	; case 0
   723     005B  1903               	skipnz
   724     005C  2817               	goto	l63
   725     005D  3A01               	xorlw	1	; case 1
   726     005E  1903               	skipnz
   727     005F  2826               	goto	l67
   728     0060  3A03               	xorlw	3	; case 2
   729     0061  1903               	skipnz
   730     0062  2835               	goto	l70
   731     0063  3A01               	xorlw	1	; case 3
   732     0064  1903               	skipnz
   733     0065  2843               	goto	l73
   734     0066  2867               	goto	l1436
   735     0067                     l1436:
   736                           
   737                           ;sounds.c: 141:     totalBeeps = howMuchTimesPlayShort + howMuchTimesPlayLong;
   738     0067  084C               	movf	playAlert@howMuchTimesPlayLong,w
   739     0068  074D               	addwf	playAlert@howMuchTimesPlayShort,w
   740     0069  00C9               	movwf	playAlert@totalBeeps
   741     006A                     l1438:
   742                           
   743                           ;sounds.c: 144:     for (uint8_t i = 0; i < howMuchTimesPlayShort; i++) {
   744     006A  01CA               	clrf	playAlert@i
   745     006B  288D               	goto	l1448
   746     006C                     l1440:
   747                           
   748                           ;sounds.c: 145:         if (i == (totalBeeps - 1)) {
   749     006C  0849               	movf	playAlert@totalBeeps,w
   750     006D  3EFF               	addlw	255
   751     006E  00C5               	movwf	??_playAlert
   752     006F  30FF               	movlw	255
   753     0070  1803               	skipnc
   754     0071  3000               	movlw	0
   755     0072  00C6               	movwf	??_playAlert+1
   756     0073  084A               	movf	playAlert@i,w
   757     0074  0645               	xorwf	??_playAlert,w
   758     0075  0446               	iorwf	??_playAlert+1,w
   759     0076  1D03               	skipz
   760     0077  2879               	goto	u671
   761     0078  287A               	goto	u670
   762     0079                     u671:
   763     0079  2882               	goto	l1444
   764     007A                     u670:
   765     007A                     l1442:
   766                           
   767                           ;sounds.c: 146:             EnqueueBeeps(120, 1);
   768     007A  3078               	movlw	120
   769     007B  00C2               	movwf	EnqueueBeeps@duration
   770     007C  3000               	movlw	0
   771     007D  00C3               	movwf	EnqueueBeeps@duration+1
   772     007E  01C4               	clrf	EnqueueBeeps@allowTimeout
   773     007F  0AC4               	incf	EnqueueBeeps@allowTimeout,f
   774     0080  223E               	fcall	_EnqueueBeeps
   775                           
   776                           ;sounds.c: 147:         } else {
   777     0081  2888               	goto	l1446
   778     0082                     l1444:
   779                           
   780                           ;sounds.c: 148:             EnqueueBeeps(120, 0);
   781     0082  3078               	movlw	120
   782     0083  00C2               	movwf	EnqueueBeeps@duration
   783     0084  3000               	movlw	0
   784     0085  00C3               	movwf	EnqueueBeeps@duration+1
   785     0086  01C4               	clrf	EnqueueBeeps@allowTimeout
   786     0087  223E               	fcall	_EnqueueBeeps
   787     0088                     l1446:
   788                           
   789                           ;sounds.c: 150:     }
   790     0088  3001               	movlw	1
   791     0089  00DF               	movwf	btemp+1
   792     008A  085F               	movf	btemp+1,w
   793     008B  1283               	bcf	3,5	;RP0=0, select bank0
   794     008C  07CA               	addwf	playAlert@i,f
   795     008D                     l1448:
   796     008D  084D               	movf	playAlert@howMuchTimesPlayShort,w
   797     008E  024A               	subwf	playAlert@i,w
   798     008F  1C03               	skipc
   799     0090  2892               	goto	u681
   800     0091  2893               	goto	u680
   801     0092                     u681:
   802     0092  286C               	goto	l1440
   803     0093                     u680:
   804     0093                     l1450:
   805                           
   806                           ;sounds.c: 153:     for (uint8_t i = 0; i < howMuchTimesPlayLong; i++) {
   807     0093  01CB               	clrf	playAlert@i_85
   808     0094  28BE               	goto	l1460
   809     0095                     l1452:
   810                           
   811                           ;sounds.c: 154:         if ((howMuchTimesPlayShort + i) == totalBeeps - 1) {
   812     0095  0849               	movf	playAlert@totalBeeps,w
   813     0096  3EFF               	addlw	255
   814     0097  00C5               	movwf	??_playAlert
   815     0098  30FF               	movlw	255
   816     0099  1803               	skipnc
   817     009A  3000               	movlw	0
   818     009B  00C6               	movwf	??_playAlert+1
   819     009C  084D               	movf	playAlert@howMuchTimesPlayShort,w
   820     009D  074B               	addwf	playAlert@i_85,w
   821     009E  00C7               	movwf	??_playAlert+2
   822     009F  01C8               	clrf	??_playAlert+3
   823     00A0  0DC8               	rlf	??_playAlert+3,f
   824     00A1  0846               	movf	??_playAlert+1,w
   825     00A2  0648               	xorwf	??_playAlert+3,w
   826     00A3  1D03               	skipz
   827     00A4  28A7               	goto	u695
   828     00A5  0845               	movf	??_playAlert,w
   829     00A6  0647               	xorwf	??_playAlert+2,w
   830     00A7                     u695:
   831     00A7  1D03               	skipz
   832     00A8  28AA               	goto	u691
   833     00A9  28AB               	goto	u690
   834     00AA                     u691:
   835     00AA  28B3               	goto	l1456
   836     00AB                     u690:
   837     00AB                     l1454:
   838                           
   839                           ;sounds.c: 155:             EnqueueBeeps(300, 1);
   840     00AB  302C               	movlw	44
   841     00AC  00C2               	movwf	EnqueueBeeps@duration
   842     00AD  3001               	movlw	1
   843     00AE  00C3               	movwf	EnqueueBeeps@duration+1
   844     00AF  01C4               	clrf	EnqueueBeeps@allowTimeout
   845     00B0  0AC4               	incf	EnqueueBeeps@allowTimeout,f
   846     00B1  223E               	fcall	_EnqueueBeeps
   847                           
   848                           ;sounds.c: 156:         } else {
   849     00B2  28B9               	goto	l1458
   850     00B3                     l1456:
   851                           
   852                           ;sounds.c: 157:             EnqueueBeeps(300, 0);
   853     00B3  302C               	movlw	44
   854     00B4  00C2               	movwf	EnqueueBeeps@duration
   855     00B5  3001               	movlw	1
   856     00B6  00C3               	movwf	EnqueueBeeps@duration+1
   857     00B7  01C4               	clrf	EnqueueBeeps@allowTimeout
   858     00B8  223E               	fcall	_EnqueueBeeps
   859     00B9                     l1458:
   860                           
   861                           ;sounds.c: 159:     }
   862     00B9  3001               	movlw	1
   863     00BA  00DF               	movwf	btemp+1
   864     00BB  085F               	movf	btemp+1,w
   865     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   866     00BD  07CB               	addwf	playAlert@i_85,f
   867     00BE                     l1460:
   868     00BE  084C               	movf	playAlert@howMuchTimesPlayLong,w
   869     00BF  024B               	subwf	playAlert@i_85,w
   870     00C0  1C03               	skipc
   871     00C1  28C3               	goto	u701
   872     00C2  28C4               	goto	u700
   873     00C3                     u701:
   874     00C3  2895               	goto	l1452
   875     00C4                     u700:
   876     00C4                     l87:
   877     00C4  0008               	return
   878     00C5                     __end_of_playAlert:
   879                           
   880                           	psect	text2
   881     023E                     __ptext2:	
   882 ;; *************** function _EnqueueBeeps *****************
   883 ;; Defined at:
   884 ;;		line 25 in file "sounds.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  duration        2    8[BANK0 ] unsigned int 
   887 ;;  allowTimeout    1   10[BANK0 ] unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0
   899 ;;      Params:         0       3
   900 ;;      Locals:         0       0
   901 ;;      Temps:          0       0
   902 ;;      Totals:         0       3
   903 ;;Total ram usage:        3 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 2
   906 ;; This function calls:
   907 ;;		___awmod
   908 ;;		___bmul
   909 ;; This function is called by:
   910 ;;		_playAlert
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914     023E                     _EnqueueBeeps:	
   915                           ;psect for function _EnqueueBeeps
   916                           
   917     023E                     l1256:	
   918                           ;incstack = 0
   919                           ; Regs used in _EnqueueBeeps: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   920                           
   921                           
   922                           ;sounds.c: 27:     if ((queueTail + 1) % 5 != queueHead) {
   923     023E  3005               	movlw	5
   924     023F  1283               	bcf	3,5	;RP0=0, select bank0
   925     0240  00BC               	movwf	___awmod@divisor
   926     0241  3000               	movlw	0
   927     0242  00BD               	movwf	___awmod@divisor+1
   928     0243  0837               	movf	_queueTail,w
   929     0244  3E01               	addlw	1
   930     0245  00BE               	movwf	___awmod@dividend
   931     0246  3000               	movlw	0
   932     0247  1803               	skipnc
   933     0248  3001               	movlw	1
   934     0249  00BF               	movwf	___awmod@dividend+1
   935     024A  21E4               	fcall	___awmod
   936     024B  1283               	bcf	3,5	;RP0=0, select bank0
   937     024C  0838               	movf	_queueHead,w
   938     024D  063C               	xorwf	?___awmod,w
   939     024E  043D               	iorwf	?___awmod+1,w
   940     024F  1903               	skipnz
   941     0250  2A52               	goto	u441
   942     0251  2A53               	goto	u440
   943     0252                     u441:
   944     0252  2A79               	goto	l34
   945     0253                     u440:
   946     0253                     l1258:
   947                           
   948                           ;sounds.c: 29:         beepsQueue[queueTail].duration = duration;
   949     0253  3003               	movlw	3
   950     0254  00BC               	movwf	___bmul@multiplicand
   951     0255  0837               	movf	_queueTail,w
   952     0256  229A               	fcall	___bmul
   953     0257  3E20               	addlw	(low (_beepsQueue| 0))& (0+255)
   954     0258  0084               	movwf	4
   955     0259  1283               	bcf	3,5	;RP0=0, select bank0
   956     025A  0842               	movf	EnqueueBeeps@duration,w
   957     025B  1383               	bcf	3,7	;select IRP bank0
   958     025C  0080               	movwf	0
   959     025D  0A84               	incf	4,f
   960     025E  0843               	movf	EnqueueBeeps@duration+1,w
   961     025F  0080               	movwf	0
   962                           
   963                           ;sounds.c: 30:         beepsQueue[queueTail].allowTimeout = allowTimeout;
   964     0260  3003               	movlw	3
   965     0261  00BC               	movwf	___bmul@multiplicand
   966     0262  0837               	movf	_queueTail,w
   967     0263  229A               	fcall	___bmul
   968     0264  3E22               	addlw	(low ((_beepsQueue| 0+2)))& (0+255)
   969     0265  0084               	movwf	4
   970     0266  1283               	bcf	3,5	;RP0=0, select bank0
   971     0267  0844               	movf	EnqueueBeeps@allowTimeout,w
   972     0268  1383               	bcf	3,7	;select IRP bank0
   973     0269  0080               	movwf	0
   974     026A                     l1260:
   975                           
   976                           ;sounds.c: 31:         queueTail = (queueTail + 1) % 5;
   977     026A  3005               	movlw	5
   978     026B  00BC               	movwf	___awmod@divisor
   979     026C  3000               	movlw	0
   980     026D  00BD               	movwf	___awmod@divisor+1
   981     026E  0837               	movf	_queueTail,w
   982     026F  3E01               	addlw	1
   983     0270  00BE               	movwf	___awmod@dividend
   984     0271  3000               	movlw	0
   985     0272  1803               	skipnc
   986     0273  3001               	movlw	1
   987     0274  00BF               	movwf	___awmod@dividend+1
   988     0275  21E4               	fcall	___awmod
   989     0276  1283               	bcf	3,5	;RP0=0, select bank0
   990     0277  083C               	movf	?___awmod,w
   991     0278  00B7               	movwf	_queueTail
   992     0279                     l34:
   993     0279  0008               	return
   994     027A                     __end_of_EnqueueBeeps:
   995                           
   996                           	psect	text3
   997     027A                     __ptext3:	
   998 ;; *************** function _Init_uC *****************
   999 ;; Defined at:
  1000 ;;		line 16 in file "initPeriphery.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0
  1014 ;;      Params:         0       0
  1015 ;;      Locals:         0       0
  1016 ;;      Temps:          0       0
  1017 ;;      Totals:         0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 2
  1021 ;; This function calls:
  1022 ;;		_MuxVoltage
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028     027A                     _Init_uC:	
  1029                           ;psect for function _Init_uC
  1030                           
  1031     027A                     l1302:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
  1034                           
  1035                           
  1036                           ;initPeriphery.c: 17:     CMCON = 0x07;
  1037     027A  3007               	movlw	7
  1038     027B  1283               	bcf	3,5	;RP0=0, select bank0
  1039     027C  0099               	movwf	25	;volatile
  1040     027D                     l1304:
  1041                           
  1042                           ;initPeriphery.c: 18:     VRCON = 0x00;
  1043     027D  1683               	bsf	3,5	;RP0=1, select bank1
  1044     027E  0199               	clrf	25	;volatile
  1045     027F                     l1306:
  1046                           
  1047                           ;initPeriphery.c: 21:     TRISIO = 0;
  1048     027F  0185               	clrf	5	;volatile
  1049     0280                     l1308:
  1050                           
  1051                           ;initPeriphery.c: 22:     GPIO = 0;
  1052     0280  1283               	bcf	3,5	;RP0=0, select bank0
  1053     0281  0185               	clrf	5	;volatile
  1054     0282                     l1310:
  1055                           
  1056                           ;initPeriphery.c: 25:     TRISIO2 = 0;
  1057     0282  1683               	bsf	3,5	;RP0=1, select bank1
  1058     0283  1105               	bcf	5,2	;volatile
  1059     0284                     l1312:
  1060                           
  1061                           ;initPeriphery.c: 26:     GP2 = 0;
  1062     0284  1283               	bcf	3,5	;RP0=0, select bank0
  1063     0285  1105               	bcf	5,2	;volatile
  1064     0286                     l1314:
  1065                           
  1066                           ;initPeriphery.c: 29:     TRISIO5 = 0;
  1067     0286  1683               	bsf	3,5	;RP0=1, select bank1
  1068     0287  1285               	bcf	5,5	;volatile
  1069     0288                     l1316:
  1070                           
  1071                           ;initPeriphery.c: 30:     GP5 = 1;
  1072     0288  1283               	bcf	3,5	;RP0=0, select bank0
  1073     0289  1685               	bsf	5,5	;volatile
  1074     028A                     l1318:
  1075                           
  1076                           ;initPeriphery.c: 33:     TRISIO4 = 0;
  1077     028A  1683               	bsf	3,5	;RP0=1, select bank1
  1078     028B  1205               	bcf	5,4	;volatile
  1079     028C                     l1320:
  1080                           
  1081                           ;initPeriphery.c: 34:     GP4 = 1;
  1082     028C  1283               	bcf	3,5	;RP0=0, select bank0
  1083     028D  1605               	bsf	5,4	;volatile
  1084     028E                     l1322:
  1085                           
  1086                           ;initPeriphery.c: 37:     VCFG = 0;
  1087     028E  131F               	bcf	31,6	;volatile
  1088     028F                     l1324:
  1089                           
  1090                           ;initPeriphery.c: 38:     TRISIO0 = 1;
  1091     028F  1683               	bsf	3,5	;RP0=1, select bank1
  1092     0290  1405               	bsf	5,0	;volatile
  1093     0291                     l1326:
  1094                           
  1095                           ;initPeriphery.c: 39:     TRISIO1 = 1;
  1096     0291  1485               	bsf	5,1	;volatile
  1097     0292                     l1328:
  1098                           
  1099                           ;initPeriphery.c: 41:     ANSEL = 0b00110011;
  1100     0292  3033               	movlw	51
  1101     0293  009F               	movwf	31	;volatile
  1102     0294                     l1330:
  1103                           
  1104                           ;initPeriphery.c: 43:     PEIE = 1;
  1105     0294  170B               	bsf	11,6	;volatile
  1106     0295                     l1332:
  1107                           
  1108                           ;initPeriphery.c: 44:     GIE = 1;
  1109     0295  178B               	bsf	11,7	;volatile
  1110     0296                     l1334:
  1111                           
  1112                           ;initPeriphery.c: 47:     prmFlags.playLong = 1;
  1113     0296  1283               	bcf	3,5	;RP0=0, select bank0
  1114     0297  16B9               	bsf	_prmFlags,5	;volatile
  1115     0298                     l1336:
  1116                           
  1117                           ;initPeriphery.c: 49:     MuxVoltage();
  1118     0298  22C5               	fcall	_MuxVoltage
  1119     0299                     l137:
  1120     0299  0008               	return
  1121     029A                     __end_of_Init_uC:
  1122                           
  1123                           	psect	text4
  1124     02EB                     __ptext4:	
  1125 ;; *************** function _InitTimer0 *****************
  1126 ;; Defined at:
  1127 ;;		line 9 in file "initPeriphery.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0
  1141 ;;      Params:         0       0
  1142 ;;      Locals:         0       0
  1143 ;;      Temps:          0       0
  1144 ;;      Totals:         0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     02EB                     _InitTimer0:	
  1156                           ;psect for function _InitTimer0
  1157                           
  1158     02EB                     l1294:	
  1159                           ;incstack = 0
  1160                           ; Regs used in _InitTimer0: [wreg+status,2]
  1161                           
  1162                           
  1163                           ;initPeriphery.c: 10:     OPTION_REG = 0b11000001;
  1164     02EB  30C1               	movlw	193
  1165     02EC  1683               	bsf	3,5	;RP0=1, select bank1
  1166     02ED  0081               	movwf	1	;volatile
  1167     02EE                     l1296:
  1168                           
  1169                           ;initPeriphery.c: 11:     TMR0 = 0;
  1170     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1171     02EF  0181               	clrf	1	;volatile
  1172     02F0                     l1298:
  1173                           
  1174                           ;initPeriphery.c: 12:     TMR0IF = 0;
  1175     02F0  110B               	bcf	11,2	;volatile
  1176     02F1                     l1300:
  1177                           
  1178                           ;initPeriphery.c: 13:     TMR0IE = 1;
  1179     02F1  168B               	bsf	11,5	;volatile
  1180     02F2                     l134:
  1181     02F2  0008               	return
  1182     02F3                     __end_of_InitTimer0:
  1183                           
  1184                           	psect	text5
  1185     015E                     __ptext5:	
  1186 ;; *************** function _BeepsStateMachine *****************
  1187 ;; Defined at:
  1188 ;;		line 38 in file "sounds.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0
  1202 ;;      Params:         0       0
  1203 ;;      Locals:         0       0
  1204 ;;      Temps:          0       2
  1205 ;;      Totals:         0       2
  1206 ;;Total ram usage:        2 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 2
  1209 ;; This function calls:
  1210 ;;		___awmod
  1211 ;;		___bmul
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217     015E                     _BeepsStateMachine:	
  1218                           ;psect for function _BeepsStateMachine
  1219                           
  1220     015E                     l1466:	
  1221                           ;incstack = 0
  1222                           ; Regs used in _BeepsStateMachine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1223                           
  1224                           
  1225                           ;sounds.c: 40:     static uint8_t state = 0;;sounds.c: 41:     static uint16_t stateMach
      +                          ineDuration = 0;;sounds.c: 42:     static uint8_t stateMachineAllowTimeout = 0;;sounds.c
      +                          : 44:     switch(state){
  1226     015E  29CC               	goto	l1510
  1227     015F                     l1468:
  1228                           
  1229                           ;sounds.c: 46:         if (queueHead != queueTail) {
  1230     015F  0838               	movf	_queueHead,w
  1231     0160  0637               	xorwf	_queueTail,w
  1232     0161  1903               	skipnz
  1233     0162  2964               	goto	u711
  1234     0163  2965               	goto	u710
  1235     0164                     u711:
  1236     0164  29E3               	goto	l57
  1237     0165                     u710:
  1238     0165                     l1470:
  1239                           
  1240                           ;sounds.c: 47:                 stateMachineDuration = beepsQueue[queueHead].duration;
  1241     0165  3003               	movlw	3
  1242     0166  00BC               	movwf	___bmul@multiplicand
  1243     0167  0838               	movf	_queueHead,w
  1244     0168  229A               	fcall	___bmul
  1245     0169  3E20               	addlw	(low (_beepsQueue| 0))& (0+255)
  1246     016A  0084               	movwf	4
  1247     016B  1383               	bcf	3,7	;select IRP bank0
  1248     016C  0800               	movf	0,w
  1249     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1250     016E  00AF               	movwf	BeepsStateMachine@stateMachineDuration
  1251     016F  0A84               	incf	4,f
  1252     0170  0800               	movf	0,w
  1253     0171  00B0               	movwf	BeepsStateMachine@stateMachineDuration+1
  1254                           
  1255                           ;sounds.c: 48:                 stateMachineAllowTimeout = beepsQueue[queueHead].allowTim
      +                          eout;
  1256     0172  3003               	movlw	3
  1257     0173  00BC               	movwf	___bmul@multiplicand
  1258     0174  0838               	movf	_queueHead,w
  1259     0175  229A               	fcall	___bmul
  1260     0176  3E22               	addlw	(low ((_beepsQueue| 0+2)))& (0+255)
  1261     0177  0084               	movwf	4
  1262     0178  1383               	bcf	3,7	;select IRP bank0
  1263     0179  0800               	movf	0,w
  1264     017A  1283               	bcf	3,5	;RP0=0, select bank0
  1265     017B  00B5               	movwf	BeepsStateMachine@stateMachineAllowTimeout
  1266     017C                     l1472:
  1267                           
  1268                           ;sounds.c: 49:                 queueHead = (queueHead + 1) % 5;
  1269     017C  3005               	movlw	5
  1270     017D  00BC               	movwf	___awmod@divisor
  1271     017E  3000               	movlw	0
  1272     017F  00BD               	movwf	___awmod@divisor+1
  1273     0180  0838               	movf	_queueHead,w
  1274     0181  3E01               	addlw	1
  1275     0182  00BE               	movwf	___awmod@dividend
  1276     0183  3000               	movlw	0
  1277     0184  1803               	skipnc
  1278     0185  3001               	movlw	1
  1279     0186  00BF               	movwf	___awmod@dividend+1
  1280     0187  21E4               	fcall	___awmod
  1281     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1282     0189  083C               	movf	?___awmod,w
  1283     018A  00B8               	movwf	_queueHead
  1284     018B                     l1474:
  1285                           
  1286                           ;sounds.c: 50:                 GP2 = 1;
  1287     018B  1505               	bsf	5,2	;volatile
  1288     018C                     l1476:
  1289                           
  1290                           ;sounds.c: 51:                 cnt0 = 0;
  1291     018C  01B1               	clrf	_cnt0	;volatile
  1292     018D  01B2               	clrf	_cnt0+1	;volatile
  1293     018E                     l1478:
  1294                           
  1295                           ;sounds.c: 52:                 state = 1;
  1296     018E  01B6               	clrf	BeepsStateMachine@state
  1297     018F  0AB6               	incf	BeepsStateMachine@state,f
  1298     0190                     l1480:
  1299                           
  1300                           ;sounds.c: 53:           prmFlags.alarmState = 1;
  1301     0190  1639               	bsf	_prmFlags,4	;volatile
  1302     0191  29E3               	goto	l57
  1303     0192                     l1482:
  1304                           
  1305                           ;sounds.c: 58:    if (cnt0 >= stateMachineDuration){
  1306     0192  0830               	movf	BeepsStateMachine@stateMachineDuration+1,w
  1307     0193  0232               	subwf	_cnt0+1,w	;volatile
  1308     0194  1D03               	skipz
  1309     0195  2998               	goto	u725
  1310     0196  082F               	movf	BeepsStateMachine@stateMachineDuration,w
  1311     0197  0231               	subwf	_cnt0,w	;volatile
  1312     0198                     u725:
  1313     0198  1C03               	skipc
  1314     0199  299B               	goto	u721
  1315     019A  299C               	goto	u720
  1316     019B                     u721:
  1317     019B  29E3               	goto	l57
  1318     019C                     u720:
  1319     019C                     l1484:
  1320                           
  1321                           ;sounds.c: 59:              cnt0 = 0;
  1322     019C  01B1               	clrf	_cnt0	;volatile
  1323     019D  01B2               	clrf	_cnt0+1	;volatile
  1324     019E                     l1486:
  1325                           
  1326                           ;sounds.c: 60:              state = 2;
  1327     019E  3002               	movlw	2
  1328     019F  00B6               	movwf	BeepsStateMachine@state
  1329     01A0                     l1488:
  1330                           
  1331                           ;sounds.c: 61:              GP2 = 0;
  1332     01A0  1105               	bcf	5,2	;volatile
  1333     01A1  29E3               	goto	l57
  1334     01A2                     l1490:
  1335                           
  1336                           ;sounds.c: 66:           if (cnt0 >= 80){
  1337     01A2  3000               	movlw	0
  1338     01A3  0232               	subwf	_cnt0+1,w	;volatile
  1339     01A4  3050               	movlw	80
  1340     01A5  1903               	skipnz
  1341     01A6  0231               	subwf	_cnt0,w	;volatile
  1342     01A7  1C03               	skipc
  1343     01A8  29AA               	goto	u731
  1344     01A9  29AB               	goto	u730
  1345     01AA                     u731:
  1346     01AA  29E3               	goto	l57
  1347     01AB                     u730:
  1348     01AB                     l1492:
  1349                           
  1350                           ;sounds.c: 67:              cnt0 = 0;
  1351     01AB  01B1               	clrf	_cnt0	;volatile
  1352     01AC  01B2               	clrf	_cnt0+1	;volatile
  1353     01AD                     l1494:
  1354                           
  1355                           ;sounds.c: 68:              if (stateMachineAllowTimeout == 0){
  1356     01AD  0835               	movf	BeepsStateMachine@stateMachineAllowTimeout,w
  1357     01AE  1D03               	btfss	3,2
  1358     01AF  29B1               	goto	u741
  1359     01B0  29B2               	goto	u740
  1360     01B1                     u741:
  1361     01B1  29B4               	goto	l1498
  1362     01B2                     u740:
  1363     01B2                     l1496:
  1364                           
  1365                           ;sounds.c: 69:                  state = 0;
  1366     01B2  01B6               	clrf	BeepsStateMachine@state
  1367                           
  1368                           ;sounds.c: 70:          }
  1369     01B3  29E3               	goto	l57
  1370     01B4                     l1498:
  1371     01B4  0335               	decf	BeepsStateMachine@stateMachineAllowTimeout,w
  1372     01B5  1D03               	btfss	3,2
  1373     01B6  29B8               	goto	u751
  1374     01B7  29B9               	goto	u750
  1375     01B8                     u751:
  1376     01B8  29E3               	goto	l57
  1377     01B9                     u750:
  1378     01B9                     l1500:
  1379                           
  1380                           ;sounds.c: 72:          state = 3;
  1381     01B9  3003               	movlw	3
  1382     01BA  00B6               	movwf	BeepsStateMachine@state
  1383     01BB  29E3               	goto	l57
  1384     01BC                     l1502:
  1385                           
  1386                           ;sounds.c: 78:          if (cnt0 >= 1300){
  1387     01BC  3005               	movlw	5
  1388     01BD  0232               	subwf	_cnt0+1,w	;volatile
  1389     01BE  3014               	movlw	20
  1390     01BF  1903               	skipnz
  1391     01C0  0231               	subwf	_cnt0,w	;volatile
  1392     01C1  1C03               	skipc
  1393     01C2  29C4               	goto	u761
  1394     01C3  29C5               	goto	u760
  1395     01C4                     u761:
  1396     01C4  29E3               	goto	l57
  1397     01C5                     u760:
  1398     01C5                     l1504:
  1399                           
  1400                           ;sounds.c: 79:            cnt0 = 0;
  1401     01C5  01B1               	clrf	_cnt0	;volatile
  1402     01C6  01B2               	clrf	_cnt0+1	;volatile
  1403                           
  1404                           ;sounds.c: 80:            queueHead = 0;
  1405     01C7  01B8               	clrf	_queueHead
  1406                           
  1407                           ;sounds.c: 81:            queueTail = 0;
  1408     01C8  01B7               	clrf	_queueTail
  1409                           
  1410                           ;sounds.c: 82:         state = 0;
  1411     01C9  01B6               	clrf	BeepsStateMachine@state
  1412     01CA                     l1506:
  1413                           
  1414                           ;sounds.c: 83:         prmFlags.alarmState = 0;
  1415     01CA  1239               	bcf	_prmFlags,4	;volatile
  1416     01CB  29E3               	goto	l57
  1417     01CC                     l1510:
  1418     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1419     01CD  0836               	movf	BeepsStateMachine@state,w
  1420     01CE  00C2               	movwf	??_BeepsStateMachine
  1421     01CF  01C3               	clrf	??_BeepsStateMachine+1
  1422                           
  1423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 1, Range of values is 0 to 0
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte            4     3 (average)
  1429                           ; direct_byte            7     6 (fixed)
  1430                           ; jumptable            260     6 (fixed)
  1431                           ;	Chosen strategy is simple_byte
  1432     01D0  0843               	movf	??_BeepsStateMachine+1,w
  1433     01D1  3A00               	xorlw	0	; case 0
  1434     01D2  1903               	skipnz
  1435     01D3  29D5               	goto	l1594
  1436     01D4  29E3               	goto	l57
  1437     01D5                     l1594:
  1438                           
  1439                           ; Switch size 1, requested type "simple"
  1440                           ; Number of cases is 4, Range of values is 0 to 3
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; direct_byte           10     6 (fixed)
  1444                           ; simple_byte           13     7 (average)
  1445                           ; jumptable            260     6 (fixed)
  1446                           ;	Chosen strategy is simple_byte
  1447     01D5  0842               	movf	??_BeepsStateMachine,w
  1448     01D6  3A00               	xorlw	0	; case 0
  1449     01D7  1903               	skipnz
  1450     01D8  295F               	goto	l1468
  1451     01D9  3A01               	xorlw	1	; case 1
  1452     01DA  1903               	skipnz
  1453     01DB  2992               	goto	l1482
  1454     01DC  3A03               	xorlw	3	; case 2
  1455     01DD  1903               	skipnz
  1456     01DE  29A2               	goto	l1490
  1457     01DF  3A01               	xorlw	1	; case 3
  1458     01E0  1903               	skipnz
  1459     01E1  29BC               	goto	l1502
  1460     01E2  29E3               	goto	l57
  1461     01E3                     l57:
  1462     01E3  0008               	return
  1463     01E4                     __end_of_BeepsStateMachine:
  1464                           
  1465                           	psect	text6
  1466     029A                     __ptext6:	
  1467 ;; *************** function ___bmul *****************
  1468 ;; Defined at:
  1469 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  multiplier      1    wreg     unsigned char 
  1472 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  multiplier      1    4[BANK0 ] unsigned char 
  1475 ;;  product         1    3[BANK0 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      unsigned char 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, btemp+1
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0
  1485 ;;      Params:         0       1
  1486 ;;      Locals:         0       2
  1487 ;;      Temps:          0       0
  1488 ;;      Totals:         0       3
  1489 ;;Total ram usage:        3 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_EnqueueBeeps
  1496 ;;		_BeepsStateMachine
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500     029A                     ___bmul:	
  1501                           ;psect for function ___bmul
  1502                           
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1506                           ;___bmul@multiplier stored from wreg
  1507     029A  1283               	bcf	3,5	;RP0=0, select bank0
  1508     029B  00BE               	movwf	___bmul@multiplier
  1509     029C                     l1202:
  1510     029C  01BD               	clrf	___bmul@product
  1511     029D                     l1204:
  1512     029D  1C3E               	btfss	___bmul@multiplier,0
  1513     029E  2AA0               	goto	u331
  1514     029F  2AA1               	goto	u330
  1515     02A0                     u331:
  1516     02A0  2AA5               	goto	l1208
  1517     02A1                     u330:
  1518     02A1                     l1206:
  1519     02A1  083C               	movf	___bmul@multiplicand,w
  1520     02A2  00DF               	movwf	btemp+1
  1521     02A3  085F               	movf	btemp+1,w
  1522     02A4  07BD               	addwf	___bmul@product,f
  1523     02A5                     l1208:
  1524     02A5  1003               	clrc
  1525     02A6  0DBC               	rlf	___bmul@multiplicand,f
  1526     02A7                     l1210:
  1527     02A7  1003               	clrc
  1528     02A8  0CBE               	rrf	___bmul@multiplier,f
  1529     02A9                     l1212:
  1530     02A9  083E               	movf	___bmul@multiplier,w
  1531     02AA  1D03               	btfss	3,2
  1532     02AB  2AAD               	goto	u341
  1533     02AC  2AAE               	goto	u340
  1534     02AD                     u341:
  1535     02AD  2A9D               	goto	l1204
  1536     02AE                     u340:
  1537     02AE                     l1214:
  1538     02AE  083D               	movf	___bmul@product,w
  1539     02AF                     l320:
  1540     02AF  0008               	return
  1541     02B0                     __end_of___bmul:
  1542                           
  1543                           	psect	text7
  1544     01E4                     __ptext7:	
  1545 ;; *************** function ___awmod *****************
  1546 ;; Defined at:
  1547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  divisor         2    2[BANK0 ] int 
  1550 ;;  dividend        2    4[BANK0 ] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  sign            1    7[BANK0 ] unsigned char 
  1553 ;;  counter         1    6[BANK0 ] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2    2[BANK0 ] int 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, btemp+1
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0
  1563 ;;      Params:         0       4
  1564 ;;      Locals:         0       2
  1565 ;;      Temps:          0       0
  1566 ;;      Totals:         0       6
  1567 ;;Total ram usage:        6 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_EnqueueBeeps
  1574 ;;		_BeepsStateMachine
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578     01E4                     ___awmod:	
  1579                           ;psect for function ___awmod
  1580                           
  1581     01E4                     l1218:	
  1582                           ;incstack = 0
  1583                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1584                           
  1585     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1586     01E5  01C1               	clrf	___awmod@sign
  1587     01E6                     l1220:
  1588     01E6  1FBF               	btfss	___awmod@dividend+1,7
  1589     01E7  29E9               	goto	u351
  1590     01E8  29EA               	goto	u350
  1591     01E9                     u351:
  1592     01E9  29F1               	goto	l1226
  1593     01EA                     u350:
  1594     01EA                     l1222:
  1595     01EA  09BE               	comf	___awmod@dividend,f
  1596     01EB  09BF               	comf	___awmod@dividend+1,f
  1597     01EC  0ABE               	incf	___awmod@dividend,f
  1598     01ED  1903               	skipnz
  1599     01EE  0ABF               	incf	___awmod@dividend+1,f
  1600     01EF                     l1224:
  1601     01EF  01C1               	clrf	___awmod@sign
  1602     01F0  0AC1               	incf	___awmod@sign,f
  1603     01F1                     l1226:
  1604     01F1  1FBD               	btfss	___awmod@divisor+1,7
  1605     01F2  29F4               	goto	u361
  1606     01F3  29F5               	goto	u360
  1607     01F4                     u361:
  1608     01F4  29FA               	goto	l1230
  1609     01F5                     u360:
  1610     01F5                     l1228:
  1611     01F5  09BC               	comf	___awmod@divisor,f
  1612     01F6  09BD               	comf	___awmod@divisor+1,f
  1613     01F7  0ABC               	incf	___awmod@divisor,f
  1614     01F8  1903               	skipnz
  1615     01F9  0ABD               	incf	___awmod@divisor+1,f
  1616     01FA                     l1230:
  1617     01FA  083C               	movf	___awmod@divisor,w
  1618     01FB  043D               	iorwf	___awmod@divisor+1,w
  1619     01FC  1903               	btfsc	3,2
  1620     01FD  29FF               	goto	u371
  1621     01FE  2A00               	goto	u370
  1622     01FF                     u371:
  1623     01FF  2A2F               	goto	l1248
  1624     0200                     u370:
  1625     0200                     l1232:
  1626     0200  01C0               	clrf	___awmod@counter
  1627     0201  0AC0               	incf	___awmod@counter,f
  1628     0202  2A0E               	goto	l1238
  1629     0203                     l1234:
  1630     0203  3001               	movlw	1
  1631     0204                     u385:
  1632     0204  1003               	clrc
  1633     0205  0DBC               	rlf	___awmod@divisor,f
  1634     0206  0DBD               	rlf	___awmod@divisor+1,f
  1635     0207  3EFF               	addlw	-1
  1636     0208  1D03               	skipz
  1637     0209  2A04               	goto	u385
  1638     020A                     l1236:
  1639     020A  3001               	movlw	1
  1640     020B  00DF               	movwf	btemp+1
  1641     020C  085F               	movf	btemp+1,w
  1642     020D  07C0               	addwf	___awmod@counter,f
  1643     020E                     l1238:
  1644     020E  1FBD               	btfss	___awmod@divisor+1,7
  1645     020F  2A11               	goto	u391
  1646     0210  2A12               	goto	u390
  1647     0211                     u391:
  1648     0211  2A03               	goto	l1234
  1649     0212                     u390:
  1650     0212                     l1240:
  1651     0212  083D               	movf	___awmod@divisor+1,w
  1652     0213  023F               	subwf	___awmod@dividend+1,w
  1653     0214  1D03               	skipz
  1654     0215  2A18               	goto	u405
  1655     0216  083C               	movf	___awmod@divisor,w
  1656     0217  023E               	subwf	___awmod@dividend,w
  1657     0218                     u405:
  1658     0218  1C03               	skipc
  1659     0219  2A1B               	goto	u401
  1660     021A  2A1C               	goto	u400
  1661     021B                     u401:
  1662     021B  2A22               	goto	l1244
  1663     021C                     u400:
  1664     021C                     l1242:
  1665     021C  083C               	movf	___awmod@divisor,w
  1666     021D  02BE               	subwf	___awmod@dividend,f
  1667     021E  083D               	movf	___awmod@divisor+1,w
  1668     021F  1C03               	skipc
  1669     0220  03BF               	decf	___awmod@dividend+1,f
  1670     0221  02BF               	subwf	___awmod@dividend+1,f
  1671     0222                     l1244:
  1672     0222  3001               	movlw	1
  1673     0223                     u415:
  1674     0223  1003               	clrc
  1675     0224  0CBD               	rrf	___awmod@divisor+1,f
  1676     0225  0CBC               	rrf	___awmod@divisor,f
  1677     0226  3EFF               	addlw	-1
  1678     0227  1D03               	skipz
  1679     0228  2A23               	goto	u415
  1680     0229                     l1246:
  1681     0229  3001               	movlw	1
  1682     022A  02C0               	subwf	___awmod@counter,f
  1683     022B  1D03               	btfss	3,2
  1684     022C  2A2E               	goto	u421
  1685     022D  2A2F               	goto	u420
  1686     022E                     u421:
  1687     022E  2A12               	goto	l1240
  1688     022F                     u420:
  1689     022F                     l1248:
  1690     022F  0841               	movf	___awmod@sign,w
  1691     0230  1903               	btfsc	3,2
  1692     0231  2A33               	goto	u431
  1693     0232  2A34               	goto	u430
  1694     0233                     u431:
  1695     0233  2A39               	goto	l1252
  1696     0234                     u430:
  1697     0234                     l1250:
  1698     0234  09BE               	comf	___awmod@dividend,f
  1699     0235  09BF               	comf	___awmod@dividend+1,f
  1700     0236  0ABE               	incf	___awmod@dividend,f
  1701     0237  1903               	skipnz
  1702     0238  0ABF               	incf	___awmod@dividend+1,f
  1703     0239                     l1252:
  1704     0239  083F               	movf	___awmod@dividend+1,w
  1705     023A  00BD               	movwf	?___awmod+1
  1706     023B  083E               	movf	___awmod@dividend,w
  1707     023C  00BC               	movwf	?___awmod
  1708     023D                     l460:
  1709     023D  0008               	return
  1710     023E                     __end_of___awmod:
  1711                           
  1712                           	psect	text8
  1713     00C5                     __ptext8:	
  1714 ;; *************** function _ADCProcessing *****************
  1715 ;; Defined at:
  1716 ;;		line 48 in file "interrupt.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  adcValue        2    5[BANK0 ] unsigned int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0
  1730 ;;      Params:         0       0
  1731 ;;      Locals:         0       2
  1732 ;;      Temps:          0       2
  1733 ;;      Totals:         0       4
  1734 ;;Total ram usage:        4 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 2
  1737 ;; This function calls:
  1738 ;;		_MuxTemp
  1739 ;;		_MuxVoltage
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745     00C5                     _ADCProcessing:	
  1746                           ;psect for function _ADCProcessing
  1747                           
  1748     00C5                     l1338:	
  1749                           ;incstack = 0
  1750                           ; Regs used in _ADCProcessing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1751                           
  1752     00C5                     l1340:
  1753                           
  1754                           ;interrupt.c: 51:     static uint8_t adcState = 0;;interrupt.c: 53:     if (ADIF == 1){
  1755     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1756     00C6  1F0C               	btfss	12,6	;volatile
  1757     00C7  28C9               	goto	u451
  1758     00C8  28CA               	goto	u450
  1759     00C9                     u451:
  1760     00C9  295D               	goto	l208
  1761     00CA                     u450:
  1762     00CA                     l1342:
  1763                           
  1764                           ;interrupt.c: 54:      adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1765     00CA  081E               	movf	30,w	;volatile
  1766     00CB  00C0               	movwf	ADCProcessing@adcValue+1
  1767     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1768     00CD  081E               	movf	30,w	;volatile
  1769     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1770     00CF  00BF               	movwf	ADCProcessing@adcValue
  1771                           
  1772                           ;interrupt.c: 56:      switch (adcState){
  1773     00D0  294D               	goto	l1392
  1774     00D1                     l1344:
  1775                           
  1776                           ;interrupt.c: 59:    if ((adcValue > 96) && (adcValue < 148)){
  1777     00D1  3000               	movlw	0
  1778     00D2  0240               	subwf	ADCProcessing@adcValue+1,w
  1779     00D3  3061               	movlw	97
  1780     00D4  1903               	skipnz
  1781     00D5  023F               	subwf	ADCProcessing@adcValue,w
  1782     00D6  1C03               	skipc
  1783     00D7  28D9               	goto	u461
  1784     00D8  28DA               	goto	u460
  1785     00D9                     u461:
  1786     00D9  28ED               	goto	l1352
  1787     00DA                     u460:
  1788     00DA                     l1346:
  1789     00DA  3000               	movlw	0
  1790     00DB  0240               	subwf	ADCProcessing@adcValue+1,w
  1791     00DC  3094               	movlw	148
  1792     00DD  1903               	skipnz
  1793     00DE  023F               	subwf	ADCProcessing@adcValue,w
  1794     00DF  1803               	skipnc
  1795     00E0  28E2               	goto	u471
  1796     00E1  28E3               	goto	u470
  1797     00E2                     u471:
  1798     00E2  28ED               	goto	l1352
  1799     00E3                     u470:
  1800     00E3                     l1348:
  1801                           
  1802                           ;interrupt.c: 60:       if(prmFlags.errorHighTemperature == 0) GP5 = 0;
  1803     00E3  19B9               	btfsc	_prmFlags,3	;volatile
  1804     00E4  28E6               	goto	u481
  1805     00E5  28E7               	goto	u480
  1806     00E6                     u481:
  1807     00E6  28E9               	goto	l190
  1808     00E7                     u480:
  1809     00E7                     l1350:
  1810     00E7  1285               	bcf	5,5	;volatile
  1811     00E8  28EA               	goto	l191
  1812     00E9                     l190:	
  1813                           ;interrupt.c: 61:        else GP5 = 1;
  1814                           
  1815     00E9  1685               	bsf	5,5	;volatile
  1816     00EA                     l191:
  1817                           
  1818                           ;interrupt.c: 62:        prmFlags.errorUnderVoltage = 0;
  1819     00EA  10B9               	bcf	_prmFlags,1	;volatile
  1820                           
  1821                           ;interrupt.c: 63:           prmFlags.errorOverVoltage = 0;
  1822     00EB  1139               	bcf	_prmFlags,2	;volatile
  1823                           
  1824                           ;interrupt.c: 64:            }
  1825     00EC  2904               	goto	l1360
  1826     00ED                     l1352:
  1827     00ED  3000               	movlw	0
  1828     00EE  0240               	subwf	ADCProcessing@adcValue+1,w
  1829     00EF  3061               	movlw	97
  1830     00F0  1903               	skipnz
  1831     00F1  023F               	subwf	ADCProcessing@adcValue,w
  1832     00F2  1803               	skipnc
  1833     00F3  28F5               	goto	u491
  1834     00F4  28F6               	goto	u490
  1835     00F5                     u491:
  1836     00F5  28F9               	goto	l1356
  1837     00F6                     u490:
  1838     00F6                     l1354:
  1839                           
  1840                           ;interrupt.c: 66:           GP5 = 1;
  1841     00F6  1685               	bsf	5,5	;volatile
  1842                           
  1843                           ;interrupt.c: 67:        prmFlags.errorUnderVoltage = 1;
  1844     00F7  14B9               	bsf	_prmFlags,1	;volatile
  1845                           
  1846                           ;interrupt.c: 68:   }
  1847     00F8  2904               	goto	l1360
  1848     00F9                     l1356:
  1849     00F9  3000               	movlw	0
  1850     00FA  0240               	subwf	ADCProcessing@adcValue+1,w
  1851     00FB  3094               	movlw	148
  1852     00FC  1903               	skipnz
  1853     00FD  023F               	subwf	ADCProcessing@adcValue,w
  1854     00FE  1C03               	skipc
  1855     00FF  2901               	goto	u501
  1856     0100  2902               	goto	u500
  1857     0101                     u501:
  1858     0101  2904               	goto	l1360
  1859     0102                     u500:
  1860     0102                     l1358:
  1861                           
  1862                           ;interrupt.c: 72:        GP5 = 1;
  1863     0102  1685               	bsf	5,5	;volatile
  1864                           
  1865                           ;interrupt.c: 73:     prmFlags.errorOverVoltage = 1;
  1866     0103  1539               	bsf	_prmFlags,2	;volatile
  1867     0104                     l1360:
  1868                           
  1869                           ;interrupt.c: 76:       MuxTemp();
  1870     0104  22D4               	fcall	_MuxTemp
  1871     0105                     l1362:
  1872                           
  1873                           ;interrupt.c: 77:    adcState = 1;
  1874     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1875     0106  01B3               	clrf	ADCProcessing@adcState
  1876     0107  0AB3               	incf	ADCProcessing@adcState,f
  1877                           
  1878                           ;interrupt.c: 78:       break;
  1879     0108  295D               	goto	l208
  1880     0109                     l1364:
  1881                           
  1882                           ;interrupt.c: 91:         if (adcValue < 930){
  1883     0109  3003               	movlw	3
  1884     010A  0240               	subwf	ADCProcessing@adcValue+1,w
  1885     010B  30A2               	movlw	162
  1886     010C  1903               	skipnz
  1887     010D  023F               	subwf	ADCProcessing@adcValue,w
  1888     010E  1803               	skipnc
  1889     010F  2911               	goto	u511
  1890     0110  2912               	goto	u510
  1891     0111                     u511:
  1892     0111  291F               	goto	l1372
  1893     0112                     u510:
  1894     0112                     l1366:
  1895                           
  1896                           ;interrupt.c: 92:               if((prmFlags.errorUnderVoltage == 0) && (prmFlags.errorO
      +                          verVoltage == 0)) GP5 = 0;
  1897     0112  18B9               	btfsc	_prmFlags,1	;volatile
  1898     0113  2915               	goto	u521
  1899     0114  2916               	goto	u520
  1900     0115                     u521:
  1901     0115  291C               	goto	l199
  1902     0116                     u520:
  1903     0116                     l1368:
  1904     0116  1939               	btfsc	_prmFlags,2	;volatile
  1905     0117  2919               	goto	u531
  1906     0118  291A               	goto	u530
  1907     0119                     u531:
  1908     0119  291C               	goto	l199
  1909     011A                     u530:
  1910     011A                     l1370:
  1911     011A  1285               	bcf	5,5	;volatile
  1912     011B  291D               	goto	l200
  1913     011C                     l199:	
  1914                           ;interrupt.c: 93:           else GP5 = 1;
  1915                           
  1916     011C  1685               	bsf	5,5	;volatile
  1917     011D                     l200:
  1918                           
  1919                           ;interrupt.c: 95:        prmFlags.errorHighTemperature = 0;
  1920     011D  11B9               	bcf	_prmFlags,3	;volatile
  1921                           
  1922                           ;interrupt.c: 96:                        }
  1923     011E  2949               	goto	l1386
  1924     011F                     l1372:
  1925     011F  3003               	movlw	3
  1926     0120  0240               	subwf	ADCProcessing@adcValue+1,w
  1927     0121  30A3               	movlw	163
  1928     0122  1903               	skipnz
  1929     0123  023F               	subwf	ADCProcessing@adcValue,w
  1930     0124  1C03               	skipc
  1931     0125  2927               	goto	u541
  1932     0126  2928               	goto	u540
  1933     0127                     u541:
  1934     0127  293E               	goto	l1382
  1935     0128                     u540:
  1936     0128                     l1374:
  1937     0128  3003               	movlw	3
  1938     0129  0240               	subwf	ADCProcessing@adcValue+1,w
  1939     012A  30CA               	movlw	202
  1940     012B  1903               	skipnz
  1941     012C  023F               	subwf	ADCProcessing@adcValue,w
  1942     012D  1803               	skipnc
  1943     012E  2930               	goto	u551
  1944     012F  2931               	goto	u550
  1945     0130                     u551:
  1946     0130  293E               	goto	l1382
  1947     0131                     u550:
  1948     0131                     l1376:
  1949                           
  1950                           ;interrupt.c: 99:              if((prmFlags.errorUnderVoltage == 0) && (prmFlags.errorOv
      +                          erVoltage == 0)) GP5 = 0;
  1951     0131  18B9               	btfsc	_prmFlags,1	;volatile
  1952     0132  2934               	goto	u561
  1953     0133  2935               	goto	u560
  1954     0134                     u561:
  1955     0134  293B               	goto	l203
  1956     0135                     u560:
  1957     0135                     l1378:
  1958     0135  1939               	btfsc	_prmFlags,2	;volatile
  1959     0136  2938               	goto	u571
  1960     0137  2939               	goto	u570
  1961     0138                     u571:
  1962     0138  293B               	goto	l203
  1963     0139                     u570:
  1964     0139                     l1380:
  1965     0139  1285               	bcf	5,5	;volatile
  1966     013A  293C               	goto	l204
  1967     013B                     l203:	
  1968                           ;interrupt.c: 100:           else GP5 = 1;
  1969                           
  1970     013B  1685               	bsf	5,5	;volatile
  1971     013C                     l204:
  1972                           
  1973                           ;interrupt.c: 102:        prmFlags.errorHighTemperature = 0;
  1974     013C  11B9               	bcf	_prmFlags,3	;volatile
  1975                           
  1976                           ;interrupt.c: 103:                        }
  1977     013D  2949               	goto	l1386
  1978     013E                     l1382:
  1979     013E  3003               	movlw	3
  1980     013F  0240               	subwf	ADCProcessing@adcValue+1,w
  1981     0140  30CB               	movlw	203
  1982     0141  1903               	skipnz
  1983     0142  023F               	subwf	ADCProcessing@adcValue,w
  1984     0143  1C03               	skipc
  1985     0144  2946               	goto	u581
  1986     0145  2947               	goto	u580
  1987     0146                     u581:
  1988     0146  2949               	goto	l1386
  1989     0147                     u580:
  1990     0147                     l1384:
  1991                           
  1992                           ;interrupt.c: 106:              GP5 = 1;
  1993     0147  1685               	bsf	5,5	;volatile
  1994                           
  1995                           ;interrupt.c: 107:                 prmFlags.errorHighTemperature = 1;
  1996     0148  15B9               	bsf	_prmFlags,3	;volatile
  1997     0149                     l1386:
  1998                           
  1999                           ;interrupt.c: 111:      MuxVoltage();
  2000     0149  22C5               	fcall	_MuxVoltage
  2001     014A                     l1388:
  2002                           
  2003                           ;interrupt.c: 112:      adcState = 0;
  2004     014A  1283               	bcf	3,5	;RP0=0, select bank0
  2005     014B  01B3               	clrf	ADCProcessing@adcState
  2006                           
  2007                           ;interrupt.c: 113:  break;
  2008     014C  295D               	goto	l208
  2009     014D                     l1392:
  2010     014D  0833               	movf	ADCProcessing@adcState,w
  2011     014E  00BD               	movwf	??_ADCProcessing
  2012     014F  01BE               	clrf	??_ADCProcessing+1
  2013                           
  2014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2015                           ; Switch size 1, requested type "simple"
  2016                           ; Number of cases is 1, Range of values is 0 to 0
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte            4     3 (average)
  2020                           ; direct_byte            7     6 (fixed)
  2021                           ; jumptable            260     6 (fixed)
  2022                           ;	Chosen strategy is simple_byte
  2023     0150  083E               	movf	??_ADCProcessing+1,w
  2024     0151  3A00               	xorlw	0	; case 0
  2025     0152  1903               	skipnz
  2026     0153  2955               	goto	l1596
  2027     0154  295D               	goto	l208
  2028     0155                     l1596:
  2029                           
  2030                           ; Switch size 1, requested type "simple"
  2031                           ; Number of cases is 2, Range of values is 0 to 1
  2032                           ; switch strategies available:
  2033                           ; Name         Instructions Cycles
  2034                           ; simple_byte            7     4 (average)
  2035                           ; direct_byte            8     6 (fixed)
  2036                           ; jumptable            260     6 (fixed)
  2037                           ;	Chosen strategy is simple_byte
  2038     0155  083D               	movf	??_ADCProcessing,w
  2039     0156  3A00               	xorlw	0	; case 0
  2040     0157  1903               	skipnz
  2041     0158  28D1               	goto	l1344
  2042     0159  3A01               	xorlw	1	; case 1
  2043     015A  1903               	skipnz
  2044     015B  2909               	goto	l1364
  2045     015C  295D               	goto	l208
  2046     015D                     l208:
  2047     015D  0008               	return
  2048     015E                     __end_of_ADCProcessing:
  2049                           
  2050                           	psect	text9
  2051     02C5                     __ptext9:	
  2052 ;; *************** function _MuxVoltage *****************
  2053 ;; Defined at:
  2054 ;;		line 12 in file "interrupt.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0
  2068 ;;      Params:         0       0
  2069 ;;      Locals:         0       0
  2070 ;;      Temps:          0       1
  2071 ;;      Totals:         0       1
  2072 ;;Total ram usage:        1 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_Init_uC
  2079 ;;		_ADCProcessing
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083     02C5                     _MuxVoltage:	
  2084                           ;psect for function _MuxVoltage
  2085                           
  2086     02C5                     l1262:	
  2087                           ;incstack = 0
  2088                           ; Regs used in _MuxVoltage: [wreg+status,2]
  2089                           
  2090                           
  2091                           ;interrupt.c: 13:        ADCON0 = 0;
  2092     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2093     02C6  019F               	clrf	31	;volatile
  2094     02C7                     l1264:
  2095                           
  2096                           ;interrupt.c: 14:        ADON = 1;
  2097     02C7  141F               	bsf	31,0	;volatile
  2098     02C8                     l1266:
  2099                           
  2100                           ;interrupt.c: 15:        ADFM = 1;
  2101     02C8  179F               	bsf	31,7	;volatile
  2102     02C9                     l1268:
  2103                           
  2104                           ;interrupt.c: 16:        CHS1 = 0;
  2105     02C9  119F               	bcf	31,3	;volatile
  2106     02CA                     l1270:
  2107                           
  2108                           ;interrupt.c: 17:        CHS0 = 1;
  2109     02CA  151F               	bsf	31,2	;volatile
  2110     02CB                     l1272:
  2111                           
  2112                           ;interrupt.c: 18:        ADIF = 0;
  2113     02CB  130C               	bcf	12,6	;volatile
  2114     02CC                     l1274:
  2115                           
  2116                           ;interrupt.c: 19:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  2117     02CC  3010               	movlw	16
  2118     02CD  00BC               	movwf	??_MuxVoltage
  2119     02CE                     u787:
  2120     02CE  0BBC               	decfsz	??_MuxVoltage,f
  2121     02CF  2ACE               	goto	u787
  2122     02D0  0000               	nop
  2123     02D1                     l1276:
  2124                           
  2125                           ;interrupt.c: 20:        GO = 1;
  2126     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2127     02D2  149F               	bsf	31,1	;volatile
  2128     02D3                     l172:
  2129     02D3  0008               	return
  2130     02D4                     __end_of_MuxVoltage:
  2131                           
  2132                           	psect	text10
  2133     02D4                     __ptext10:	
  2134 ;; *************** function _MuxTemp *****************
  2135 ;; Defined at:
  2136 ;;		line 24 in file "interrupt.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0
  2150 ;;      Params:         0       0
  2151 ;;      Locals:         0       0
  2152 ;;      Temps:          0       1
  2153 ;;      Totals:         0       1
  2154 ;;Total ram usage:        1 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_ADCProcessing
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164     02D4                     _MuxTemp:	
  2165                           ;psect for function _MuxTemp
  2166                           
  2167     02D4                     l1278:	
  2168                           ;incstack = 0
  2169                           ; Regs used in _MuxTemp: [wreg+status,2]
  2170                           
  2171                           
  2172                           ;interrupt.c: 25:        ADCON0 = 0;
  2173     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2174     02D5  019F               	clrf	31	;volatile
  2175     02D6                     l1280:
  2176                           
  2177                           ;interrupt.c: 26:        ADON = 1;
  2178     02D6  141F               	bsf	31,0	;volatile
  2179     02D7                     l1282:
  2180                           
  2181                           ;interrupt.c: 27:        ADFM = 1;
  2182     02D7  179F               	bsf	31,7	;volatile
  2183     02D8                     l1284:
  2184                           
  2185                           ;interrupt.c: 28:        CHS1 = 0;
  2186     02D8  119F               	bcf	31,3	;volatile
  2187     02D9                     l1286:
  2188                           
  2189                           ;interrupt.c: 29:        CHS0 = 0;
  2190     02D9  111F               	bcf	31,2	;volatile
  2191     02DA                     l1288:
  2192                           
  2193                           ;interrupt.c: 30:        ADIF = 0;
  2194     02DA  130C               	bcf	12,6	;volatile
  2195     02DB                     l1290:
  2196                           
  2197                           ;interrupt.c: 31:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  2198     02DB  3010               	movlw	16
  2199     02DC  00BC               	movwf	??_MuxTemp
  2200     02DD                     u797:
  2201     02DD  0BBC               	decfsz	??_MuxTemp,f
  2202     02DE  2ADD               	goto	u797
  2203     02DF  0000               	nop
  2204     02E0                     l1292:
  2205                           
  2206                           ;interrupt.c: 32:        GO = 1;
  2207     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2208     02E1  149F               	bsf	31,1	;volatile
  2209     02E2                     l175:
  2210     02E2  0008               	return
  2211     02E3                     __end_of_MuxTemp:
  2212                           
  2213                           	psect	text11
  2214     02B0                     __ptext11:	
  2215 ;; *************** function _ISR *****************
  2216 ;; Defined at:
  2217 ;;		line 35 in file "interrupt.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0
  2231 ;;      Params:         0       0
  2232 ;;      Locals:         0       0
  2233 ;;      Temps:          0       2
  2234 ;;      Totals:         0       2
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		Interrupt level 1
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244     02B0                     _ISR:	
  2245                           ;psect for function _ISR
  2246                           
  2247     02B0                     i1l1524:
  2248                           
  2249                           ;interrupt.c: 38:     if (TMR0IF == 1){
  2250     02B0  1D0B               	btfss	11,2	;volatile
  2251     02B1  2AB3               	goto	u77_21
  2252     02B2  2AB4               	goto	u77_20
  2253     02B3                     u77_21:
  2254     02B3  2ABE               	goto	i1l181
  2255     02B4                     u77_20:
  2256     02B4                     i1l1526:
  2257                           
  2258                           ;interrupt.c: 39:             TMR0 = 5;
  2259     02B4  3005               	movlw	5
  2260     02B5  0081               	movwf	1	;volatile
  2261                           
  2262                           ;interrupt.c: 40:          ++cnt0;
  2263     02B6  3001               	movlw	1
  2264     02B7  07B1               	addwf	_cnt0,f	;volatile
  2265     02B8  1803               	skipnc
  2266     02B9  0AB2               	incf	_cnt0+1,f	;volatile
  2267     02BA  3000               	movlw	0
  2268     02BB  07B2               	addwf	_cnt0+1,f	;volatile
  2269     02BC                     i1l1528:
  2270                           
  2271                           ;interrupt.c: 41:          TMR0IF = 0;
  2272     02BC  110B               	bcf	11,2	;volatile
  2273     02BD                     i1l1530:
  2274                           
  2275                           ;interrupt.c: 42:             TMR0IE = 1;
  2276     02BD  168B               	bsf	11,5	;volatile
  2277     02BE                     i1l181:
  2278     02BE  083B               	movf	??_ISR+1,w
  2279     02BF  008A               	movwf	10
  2280     02C0  0E3A               	swapf	??_ISR,w
  2281     02C1  0083               	movwf	3
  2282     02C2  0EDE               	swapf	btemp,f
  2283     02C3  0E5E               	swapf	btemp,w
  2284     02C4  0009               	retfie
  2285     02C5                     __end_of_ISR:
  2286     005E                     btemp	set	94	;btemp
  2287     005E                     wtemp0	set	94
  2288                           
  2289                           	psect	intentry
  2290     0004                     __pintentry:	
  2291                           ;incstack = 0
  2292                           ; Regs used in _ISR: [wreg]
  2293                           
  2294     0004                     interrupt_function:
  2295     005E                     saved_w	set	btemp
  2296     0004  00DE               	movwf	btemp
  2297     0005  0E03               	swapf	3,w
  2298     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0007  00BA               	movwf	??_ISR
  2300     0008  080A               	movf	10,w
  2301     0009  00BB               	movwf	??_ISR+1
  2302     000A  2AB0               	ljmp	_ISR
  2303                           
  2304                           	psect	config
  2305                           
  2306                           ;Config register CONFIG @ 0x2007
  2307                           ;	Oscillator Selection bits
  2308                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2309                           ;	Watchdog Timer Enable bit
  2310                           ;	WDTE = OFF, WDT disabled
  2311                           ;	Power-Up Timer Enable bit
  2312                           ;	PWRTE = OFF, PWRT disabled
  2313                           ;	GP3/MCLR pin function select
  2314                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  2315                           ;	Brown-out Detect Enable bit
  2316                           ;	BOREN = ON, BOD enabled
  2317                           ;	Code Protection bit
  2318                           ;	CP = OFF, Program Memory code protection is disabled
  2319                           ;	Data Code Protection bit
  2320                           ;	CPD = OFF, Data memory code protection is disabled
  2321     2007                     	org	8199
  2322     2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     20      46

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_playAlert
    _playAlert->_EnqueueBeeps
    _EnqueueBeeps->___awmod
    _Init_uC->_MuxVoltage
    _BeepsStateMachine->___awmod
    _ADCProcessing->_MuxTemp
    _ADCProcessing->_MuxVoltage

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2984
                      _ADCProcessing
                  _BeepsStateMachine
                         _InitTimer0
                            _Init_uC
                          _playAlert
 ---------------------------------------------------------------------------------
 (1) _playAlert                                            9     9      0    1858
                                             11 BANK0      9     9      0
                       _EnqueueBeeps
 ---------------------------------------------------------------------------------
 (2) _EnqueueBeeps                                         3     0      3    1600
                                              8 BANK0      3     0      3
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BeepsStateMachine                                    2     2      0     948
                                              8 BANK0      2     2      0
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     196
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADCProcessing                                        4     4      0     178
                                              3 BANK0      4     4      0
                            _MuxTemp
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (2) _MuxVoltage                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MuxTemp                                              1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCProcessing
     _MuxTemp
     _MuxVoltage
   _BeepsStateMachine
     ___awmod
     ___bmul
   _InitTimer0
   _Init_uC
     _MuxVoltage
   _playAlert
     _EnqueueBeeps
       ___awmod
       ___bmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     14      2E       4       74.2%
ABS                  0      0      2E       5        0.0%
DATA                 0      0      2E       6        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Sep 18 09:30:02 2025

                           ___bmul@product 003D                                         l34 0279  
                                       l70 0035                                         l63 0017  
                                       l57 01E3                                         l73 0043  
                                       l67 0026                                         l87 00C4  
                                       _GO 00F9                                         fsr 0004  
                                      l200 011D                                        l203 013B  
                                      l204 013C                                        l134 02F2  
                                      l208 015D                                        l320 02AF  
                                      l137 0299                                        l172 02D3  
                                      l190 00E9                                        l175 02E2  
                                      l191 00EA                                        l460 023D  
                                      l199 011C                                        _GP2 002A  
                                      _GP4 002C                                        _GP5 002D  
                                      _GIE 005F                                        u400 021C  
                                      u401 021B                                        u330 02A1  
                                      u331 02A0                                        u500 0102  
                                      u420 022F                                        u340 02AE  
                                      u501 0101                                        u421 022E  
                                      u405 0218                                        u341 02AD  
                                      u510 0112                                        u430 0234  
                                      u350 01EA                                        u511 0111  
                                      u431 0233                                        u415 0223  
                                      u351 01E9                                        u520 0116  
                                      u360 01F5                                        u440 0253  
                                      u600 0023                                        u521 0115  
                                      u361 01F4                                        u441 0252  
                                      u601 0022                                        u530 011A  
                                      u450 00CA                                        u370 0200  
                                      u610 002A                                        u531 0119  
                                      u451 00C9                                        u371 01FF  
                                      u611 0029                                        u540 0128  
                                      u460 00DA                                        u700 00C4  
                                      u620 0032                                        _ISR 02B0  
                                      u541 0127                                        u461 00D9  
                                      u701 00C3                                        u621 0031  
                                      u550 0131                                        u470 00E3  
                                      u390 0212                                        u710 0165  
                                      u630 0039                                        u551 0130  
                                      u471 00E2                                        u391 0211  
                                      u711 0164                                        u631 0038  
                                      u560 0135                                        u480 00E7  
                                      u720 019C                                        u640 0040  
                                      u561 0134                                        u481 00E6  
                                      u385 0204                                        u721 019B  
                                      u641 003F                                        u570 0139  
                                      u490 00F6                                        u730 01AB  
                                      u650 0047                                        u571 0138  
                                      u491 00F5                                        u731 01AA  
                                      u651 0046                                        u580 0147  
                                      u740 01B2                                        u660 004E  
                                      u581 0146                                        u741 01B1  
                                      u725 0198                                        u661 004D  
                                      u750 01B9                                        u670 007A  
                                      u590 001B                                        u751 01B8  
                                      u671 0079                                        u591 001A  
                                      u760 01C5                                        u680 0093  
                                      u761 01C4                                        u681 0092  
                                      u690 00AB                                        u691 00AA  
                                      u695 00A7                                        u787 02CE  
                                      u797 02DD                                        fsr0 0004  
                                      indf 0000                               ___awmod@sign 0041  
                    ADCProcessing@adcValue 003F                      ADCProcessing@adcState 0033  
                                     ?_ISR 003A                                       l1210 02A7  
                                     l1202 029C                                       l1220 01E6  
                                     l1212 02A9                                       l1204 029D  
                                     l1300 02F1                                       l1230 01FA  
                                     l1222 01EA                                       l1214 02AE  
                                     l1206 02A1                                       l1310 0282  
                                     l1302 027A                                       l1240 0212  
                                     l1232 0200                                       l1224 01EF  
                                     l1208 02A5                                       l1320 028C  
                                     l1312 0284                                       l1304 027D  
                                     l1400 001B                                       l1250 0234  
                                     l1242 021C                                       l1234 0203  
                                     l1226 01F1                                       l1218 01E4  
                                     l1330 0294                                       l1322 028E  
                                     l1314 0286                                       l1306 027F  
                                     l1410 002E                                       l1402 001D  
                                     l1340 00C5                                       l1252 0239  
                                     l1244 0222                                       l1236 020A  
                                     l1228 01F5                                       l1500 01B9  
                                     l1332 0295                                       l1324 028F  
                                     l1316 0288                                       l1308 0280  
                                     l1260 026A                                       l1420 0040  
                                     l1412 0032                                       l1404 001F  
                                     l1270 02CA                                       l1262 02C5  
                                     l1350 00E7                                       l1342 00CA  
                                     l1246 0229                                       l1238 020E  
                                     l1502 01BC                                       l1510 01CC  
                                     l1334 0296                                       l1326 0291  
                                     l1318 028A                                       l1430 004F  
                                     l1422 0047                                       l1414 0039  
                                     l1406 0023                                       l1280 02D6  
                                     l1272 02CB                                       l1264 02C7  
                                     l1360 0104                                       l1352 00ED  
                                     l1344 00D1                                       l1248 022F  
                                     l1504 01C5                                       l1336 0298  
                                     l1328 0292                                       l1256 023E  
                                     l1440 006C                                       l1424 0048  
                                     l1416 003B                                       l1408 002A  
                                     l1520 02F6                                       l1290 02DB  
                                     l1282 02D7                                       l1274 02CC  
                                     l1266 02C8                                       l1370 011A  
                                     l1362 0105                                       l1354 00F6  
                                     l1346 00DA                                       l1338 00C5  
                                     l1506 01CA                                       l1258 0253  
                                     l1450 0093                                       l1442 007A  
                                     l1426 004A                                       l1418 003C  
                                     l1434 0051                                       l1522 02F7  
                                     l1292 02E0                                       l1284 02D8  
                                     l1276 02D1                                       l1268 02C9  
                                     l1380 0139                                       l1372 011F  
                                     l1364 0109                                       l1356 00F9  
                                     l1348 00E3                                       l1452 0095  
                                     l1460 00BE                                       l1444 0082  
                                     l1428 004E                                       l1436 0067  
                                     l1516 02F3                                       l1286 02D9  
                                     l1278 02D4                                       l1374 0128  
                                     l1382 013E                                       l1366 0112  
                                     l1358 0102                                       l1470 0165  
                                     l1294 02EB                                       l1454 00AB  
                                     l1446 0088                                       l1438 006A  
                                     l1518 02F5                                       l1288 02DA  
                                     l1384 0147                                       l1376 0131  
                                     l1368 0116                                       l1392 014D  
                                     l1480 0190                                       l1472 017C  
                                     l1296 02EE                                       l1456 00B3  
                                     l1448 008D                                       l1378 0135  
                                     l1386 0149                                       l1490 01A2  
                                     l1482 0192                                       l1474 018B  
                                     l1466 015E                                       l1298 02F0  
                                     l1458 00B9                                       l1388 014A  
                                     l1492 01AB                                       l1484 019C  
                                     l1476 018C                                       l1468 015F  
                                     l1494 01AD                                       l1486 019E  
                                     l1478 018E                                       l1398 0013  
                                     l1496 01B2                                       l1488 01A0  
                                     l1592 0059                                       l1594 01D5  
                                     l1498 01B4                                       l1596 0155  
                                     _ADIF 0066                                       _ADFM 00FF  
                                     _ADON 00F8                                       _CHS0 00FA  
                                     _CHS1 00FB                                       _GPIO 0005  
                                     _PEIE 005E                                       _VCFG 00FE  
                                     _TMR0 0001                              ?_EnqueueBeeps 0042  
                                     _cnt0 0031                                       _main 02F3  
                                     btemp 005E                                       start 000B  
                        ___bmul@multiplier 003E                            __end_of_Init_uC 029A  
                                    ??_ISR 003A                            __end_of_MuxTemp 02E3  
                                    ?_main 003A                            __end_of___awmod 023E  
                                    _CMCON 0019                                      _ANSEL 009F  
                                    i1l181 02BE                                      _VRCON 0099  
                                    u77_20 02B4                                      u77_21 02B3  
                 EnqueueBeeps@allowTimeout 0044                             ??_EnqueueBeeps 0000  
                                    pclath 000A                                      status 0003  
                                    wtemp0 005E      BeepsStateMachine@stateMachineDuration 002F  
                          __initialization 000C                                 _InitTimer0 02EB  
                             __end_of_main 02FA                                     ??_main 0000  
                                   _ADCON0 001F                                     _ADRESH 001E  
                                   _ADRESL 009E                                     i1l1530 02BD  
                                   i1l1524 02B0                                     i1l1526 02B4  
                                   i1l1528 02BC                                     _TMR0IE 005D  
                                   _TMR0IF 005A                                     _TRISIO 0085  
                                ??_Init_uC 0000                                  ??_MuxTemp 003C  
                                   ___bmul 029A                                  ??___awmod 0000  
                               _MuxVoltage 02C5                            ___awmod@divisor 003C  
                          ___awmod@counter 0040                                     saved_w 005E  
                  __end_of__initialization 0011                              playAlert@i_85 004B  
                      ___bmul@multiplicand 003C                                ?_InitTimer0 003A  
                           __pcstackCOMMON 0000                       __end_of_EnqueueBeeps 027A  
                               _beepsQueue 0020                                 __pbssBANK0 0020  
                            _ADCProcessing 00C5                                 __pmaintext 02F3  
                                  ?___bmul 003C                                 __pintentry 0004  
                              ?_MuxVoltage 003A                                    _TRISIO0 0428  
                                  _TRISIO1 0429                                    _TRISIO2 042A  
                                  _TRISIO4 042C                                    _TRISIO5 042D  
                           ?_ADCProcessing 003A             playAlert@howMuchTimesPlayShort 004D  
                                  _Init_uC 027A                                    _MuxTemp 02D4  
                                  ___awmod 01E4                     BeepsStateMachine@state 0036  
                                  __ptext1 0013                                    __ptext2 023E  
                                  __ptext3 027A                                    __ptext4 02EB  
                                  __ptext5 015E                                    __ptext6 029A  
                                  __ptext7 01E4                                    __ptext8 00C5  
                                  __ptext9 02C5                           ___awmod@dividend 003E  
                        __end_of_playAlert 00C5                                    clrloop0 02E4  
                     end_of_initialization 0011                            ??_ADCProcessing 003D  
                             _EnqueueBeeps 023E                       EnqueueBeeps@duration 0042  
                             ??_InitTimer0 0000                             __end_of___bmul 02B0  
                      start_initialization 000C                                __end_of_ISR 02C5  
                       __end_of_InitTimer0 02F3                                   ??___bmul 0000  
                             ??_MuxVoltage 003C                                  ___latbits 0000  
                            __pcstackBANK0 003A                         __end_of_MuxVoltage 02D4  
                               playAlert@i 004A                                   ?_Init_uC 003A  
                                 ?_MuxTemp 003A                                   ?___awmod 003C  
            playAlert@howMuchTimesPlayLong 004C                          interrupt_function 0004  
                                _playAlert 0013                                  clear_ram0 02E3  
                      playAlert@totalBeeps 0049                        playAlert@soundState 0034  
                                _queueHead 0038                                  _queueTail 0037  
                               ?_playAlert 003A                                   __ptext10 02D4  
                                 __ptext11 02B0                      __end_of_ADCProcessing 015E  
                        _BeepsStateMachine 015E                         ?_BeepsStateMachine 003A  
                                 _prmFlags 0039                        ??_BeepsStateMachine 0042  
                __end_of_BeepsStateMachine 01E4                                   intlevel1 0000  
                              ??_playAlert 0045                                 _OPTION_REG 0081  
BeepsStateMachine@stateMachineAllowTimeout 0035  
